// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9g1e5LLLDS4TGJiaFCSEyH
// Component: jvrHBi1Vmdv8

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: Gl72hv5IMo-p/codeComponent
import Checkbox from "../../Checkbox"; // plasmic-import: IDR0sAqN5tth/component
import Button from "../../Button"; // plasmic-import: oVzoHzMf1TLl/component
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import MetrikaYandex from "../../MetrikaYandex"; // plasmic-import: bwh2kDzd78mD/component

import { useScreenVariants as useScreenVariantsfobTirRaixGf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: fobTIRRaixGf/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../fragment_design_system/plasmic.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 9g1e5LLLDS4TGJiaFCSEyH/projectcss
import sty from "./PlasmicPricing.module.css"; // plasmic-import: jvrHBi1Vmdv8/css

import ChevronRightIcon from "../fragment_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import ChevronLeftIcon from "../fragment_icons/icons/PlasmicIcon__ChevronLeft"; // plasmic-import: r9Upp9NbiZkf/icon

createPlasmicElementProxy;

export type PlasmicPricing__VariantMembers = {};
export type PlasmicPricing__VariantsArgs = {};
type VariantPropType = keyof PlasmicPricing__VariantsArgs;
export const PlasmicPricing__VariantProps = new Array<VariantPropType>();

export type PlasmicPricing__ArgsType = {};
type ArgPropType = keyof PlasmicPricing__ArgsType;
export const PlasmicPricing__ArgProps = new Array<ArgPropType>();

export type PlasmicPricing__OverridesType = {
  root?: Flex__<"div">;
  getNelsonFeatures?: Flex__<typeof ApiRequest>;
  outlineVertical?: Flex__<"div">;
  titleVertical?: Flex__<"div">;
  h2?: Flex__<"h2">;
  kindOfPrice?: Flex__<"div">;
  silverVertical?: Flex__<"div">;
  checkbox2?: Flex__<typeof Checkbox>;
  subjectSilver?: Flex__<"div">;
  checkboxSilver?: Flex__<typeof Checkbox>;
  priceSilver?: Flex__<"div">;
  button?: Flex__<typeof Button>;
  description?: Flex__<"div">;
  accordion?: Flex__<typeof AntdAccordion>;
  accordion2?: Flex__<typeof AntdAccordion>;
  feedbacks?: Flex__<typeof AntdAccordion>;
  accordion3?: Flex__<typeof AntdAccordion>;
  accordion4?: Flex__<typeof AntdAccordion>;
  apiRequestForNotificationSetting?: Flex__<typeof ApiRequest>;
  customerfeatures?: Flex__<typeof ApiRequest>;
  auth?: Flex__<typeof ApiRequest>;
};

export interface DefaultPricingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPricing__RenderFunc(props: {
  variants: PlasmicPricing__VariantsArgs;
  args: PlasmicPricing__ArgsType;
  overrides: PlasmicPricing__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "checkboxSilver[].isChecked",
        type: "private",
        variableType: "boolean"
      },
      {
        path: "totalprice",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "accordion.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion2.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion3.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion4.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "checkbox2.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "getNelsonFeatures.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "getNelsonFeatures"
      },
      {
        path: "getNelsonFeatures.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "getNelsonFeatures"
      },
      {
        path: "getNelsonFeatures.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "getNelsonFeatures"
      },
      {
        path: "apiRequestForNotificationSetting.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequestForNotificationSetting"
      },
      {
        path: "apiRequestForNotificationSetting.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequestForNotificationSetting"
      },
      {
        path: "apiRequestForNotificationSetting.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequestForNotificationSetting"
      },
      {
        path: "feedbacks.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "customerfeatures.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "customerfeatures"
      },
      {
        path: "customerfeatures.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "customerfeatures"
      },
      {
        path: "customerfeatures.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "customerfeatures"
      },
      {
        path: "auth.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "auth"
      },
      {
        path: "auth.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "auth"
      },
      {
        path: "auth.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "auth"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsfobTirRaixGf()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_fragment_design_system_css.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <ApiRequest
            data-plasmic-name={"getNelsonFeatures"}
            data-plasmic-override={overrides.getNelsonFeatures}
            className={classNames("__wab_instance", sty.getNelsonFeatures)}
            errorDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2Ijce
                )}
              >
                {"Error fetching data"}
              </div>
            }
            loadingDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__i1XN6
                )}
              >
                {"Loading..."}
              </div>
            }
            method={"GET"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "getNelsonFeatures",
                "error"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "getNelsonFeatures",
                "loading"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "getNelsonFeatures",
                "data"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            ref={ref => {
              $refs["getNelsonFeatures"] = ref;
            }}
            url={
              "https://apigw.paziresh24.com/v1/n8n-nelson/webhook/nelsonfeatures"
            }
          >
            {(() => {
              try {
                return $state.getNelsonFeatures.data?.length > 0;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return false;
                }
                throw e;
              }
            })() ? (
              <Stack__
                as={"div"}
                data-plasmic-name={"outlineVertical"}
                data-plasmic-override={overrides.outlineVertical}
                hasGap={true}
                className={classNames(projectcss.all, sty.outlineVertical)}
              >
                <div
                  data-plasmic-name={"titleVertical"}
                  data-plasmic-override={overrides.titleVertical}
                  className={classNames(projectcss.all, sty.titleVertical)}
                >
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {
                      "\u062a\u0639\u0631\u0641\u0647 \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u067e\u0646\u0644 \u067e\u0632\u0634\u06a9\u0627\u0646 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4"
                    }
                  </h2>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"kindOfPrice"}
                  data-plasmic-override={overrides.kindOfPrice}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.kindOfPrice)}
                >
                  <div
                    data-plasmic-name={"silverVertical"}
                    data-plasmic-override={overrides.silverVertical}
                    className={classNames(projectcss.all, sty.silverVertical)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gvfnL
                      )}
                    >
                      {
                        "\u067e\u0646\u0644 \u0646\u0642\u0631\u0647\u200c\u0627\u06cc"
                      }
                    </div>
                    <Checkbox
                      data-plasmic-name={"checkbox2"}
                      data-plasmic-override={overrides.checkbox2}
                      className={classNames("__wab_instance", sty.checkbox2)}
                      isChecked={
                        generateStateValueProp($state, [
                          "checkbox2",
                          "isChecked"
                        ]) ?? false
                      }
                      isDisabled={true}
                      onChange={async (...eventArgs: any) => {
                        ((...eventArgs) => {
                          generateStateOnChangeProp($state, [
                            "checkbox2",
                            "isChecked"
                          ])(eventArgs[0]);
                        }).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__maseR
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {
                              "\u062a\u0645\u0627\u0645 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u067e\u0646\u0644 \u0639\u0627\u062f\u06cc"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                    </Checkbox>
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $state.getNelsonFeatures.data;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          data-plasmic-name={"subjectSilver"}
                          data-plasmic-override={overrides.subjectSilver}
                          className={classNames(
                            projectcss.all,
                            sty.subjectSilver
                          )}
                          key={currentIndex}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sOxr2
                            )}
                            onClick={async event => {
                              const $steps = {};
                            }}
                          >
                            {(() => {
                              const child$Props = {
                                className: classNames(
                                  "__wab_instance",
                                  sty.checkboxSilver
                                ),
                                isChecked:
                                  generateStateValueProp($state, [
                                    "checkboxSilver",
                                    __plasmic_idx_0,
                                    "isChecked"
                                  ]) ?? false,
                                isDisabled: (() => {
                                  try {
                                    return currentItem.price === 0;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return [];
                                    }
                                    throw e;
                                  }
                                })(),
                                onChange: async (...eventArgs: any) => {
                                  ((...eventArgs) => {
                                    generateStateOnChangeProp($state, [
                                      "checkboxSilver",
                                      __plasmic_idx_0,
                                      "isChecked"
                                    ])(eventArgs[0]);
                                  }).apply(null, eventArgs);

                                  if (eventArgs.length > 1 && eventArgs[1]) {
                                    return;
                                  }

                                  (async isChecked => {
                                    const $steps = {};

                                    $steps["updateTotalprice"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["totalprice"]
                                            },
                                            operation: 0,
                                            value:
                                              $state.getNelsonFeatures?.data
                                                ?.map((feature, index) => ({
                                                  ...feature,
                                                  active:
                                                    $state.checkboxSilver[index]
                                                      .isChecked
                                                }))
                                                .filter(
                                                  feature => feature.active
                                                )
                                                .reduce((prev, current) => {
                                                  return prev + current.price;
                                                }, 0)
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateTotalprice"] != null &&
                                      typeof $steps["updateTotalprice"] ===
                                        "object" &&
                                      typeof $steps["updateTotalprice"].then ===
                                        "function"
                                    ) {
                                      $steps["updateTotalprice"] = await $steps[
                                        "updateTotalprice"
                                      ];
                                    }
                                  }).apply(null, eventArgs);
                                }
                              };

                              initializePlasmicStates(
                                $state,
                                [
                                  {
                                    name: "checkboxSilver[].isChecked",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return $state.customerfeatures.data &&
                                            Object.keys(
                                              $state.customerfeatures.data
                                            ).length === 0
                                            ? currentItem.price === 0
                                            : $state.customerfeatures.data.find(
                                                item =>
                                                  item.features ===
                                                    currentItem.features &&
                                                  item.active
                                              )
                                            ? true
                                            : false;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return [];
                                          }
                                          throw e;
                                        }
                                      })()
                                  }
                                ],
                                [__plasmic_idx_0]
                              );
                              return (
                                <Checkbox
                                  data-plasmic-name={"checkboxSilver"}
                                  data-plasmic-override={
                                    overrides.checkboxSilver
                                  }
                                  {...child$Props}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__plOtY
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.Title;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Checkbox>
                              );
                            })()}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f9B26
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.unit
                                      ? `(به ازای ${currentItem.unit})`
                                      : "";
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__n5CVe
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.price === 0
                                      ? "رایگان"
                                      : currentItem.price
                                          .toString()
                                          .slice(0, -1) + " تومان";
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </div>
                        </div>
                      );
                    })}
                    <div
                      data-plasmic-name={"priceSilver"}
                      data-plasmic-override={overrides.priceSilver}
                      className={classNames(projectcss.all, sty.priceSilver)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k9O3
                        )}
                      >
                        {"\u0647\u0632\u06cc\u0646\u0647 : "}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hqzG9
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return $state.totalprice
                                ? $state.totalprice
                                    .toString()
                                    .slice(0, -1)
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",") +
                                    " تومان"
                                : "0 تومان";
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__vpFLj)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ysEh
                    )}
                  >
                    {
                      "\u0628\u0631\u0627\u06cc \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06cc\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0633\u0631\u0648\u06cc\u0633 \u200c\u0647\u0627\u06cc \u0627\u0646\u062a\u062e\u0627\u0628\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062e\u0648\u062f \u0631\u0627 \u062b\u0628\u062a \u06a9\u0646\u06cc\u062f."
                    }
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ftMdP)}
                  >
                    <Button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      children2={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bP0Ka
                          )}
                        >
                          {
                            "\u062b\u0628\u062a \u062f\u0631\u062e\u0648\u0627\u0633\u062a"
                          }
                        </div>
                      }
                      className={classNames("__wab_instance", sty.button)}
                      loading={(() => {
                        try {
                          return $state.loading;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()}
                      onClick={async event => {
                        const $steps = {};

                        $steps["loadingStart"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["loading"]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["loadingStart"] != null &&
                          typeof $steps["loadingStart"] === "object" &&
                          typeof $steps["loadingStart"].then === "function"
                        ) {
                          $steps["loadingStart"] = await $steps["loadingStart"];
                        }

                        $steps["addMember"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "POST",
                                  "https://apigw.paziresh24.com/v1/n8n-nelson/webhook/update-notification-member"
                                ]
                              };
                              return $globalActions[
                                "Fragment.apiRequest"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["addMember"] != null &&
                          typeof $steps["addMember"] === "object" &&
                          typeof $steps["addMember"].then === "function"
                        ) {
                          $steps["addMember"] = await $steps["addMember"];
                        }

                        $steps[
                          "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                        ] = true
                          ? (() => {
                              const actionArgs = {
                                destination:
                                  "https://opium-dashboard.paziresh24.com/list-of-notofications"
                              };
                              return (({ destination }) => {
                                if (
                                  typeof destination === "string" &&
                                  destination.startsWith("#")
                                ) {
                                  document
                                    .getElementById(destination.substr(1))
                                    .scrollIntoView({ behavior: "smooth" });
                                } else {
                                  __nextRouter?.push(destination);
                                }
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps[
                            "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                          ] != null &&
                          typeof $steps[
                            "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                          ] === "object" &&
                          typeof $steps[
                            "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                          ].then === "function"
                        ) {
                          $steps[
                            "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                          ] = await $steps[
                            "goToHttpsOpiumDashboardPaziresh24ComListOfNotofications"
                          ];
                        }

                        $steps["loadingFalse"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["loading"]
                                },
                                operation: 0,
                                value: false
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["loadingFalse"] != null &&
                          typeof $steps["loadingFalse"] === "object" &&
                          typeof $steps["loadingFalse"].then === "function"
                        ) {
                          $steps["loadingFalse"] = await $steps["loadingFalse"];
                        }

                        $steps["apiRollout"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "POST",
                                  "https://apigw.paziresh24.com/v1/n8n-nelson/webhook/rollout-notification-menu"
                                ]
                              };
                              return $globalActions[
                                "Fragment.apiRequest"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["apiRollout"] != null &&
                          typeof $steps["apiRollout"] === "object" &&
                          typeof $steps["apiRollout"].then === "function"
                        ) {
                          $steps["apiRollout"] = await $steps["apiRollout"];
                        }

                        $steps["changefeature"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "POST",
                                  "https://apigw.paziresh24.com/v1/n8n-nelson/webhook/change-customer-nelson-features",
                                  undefined,
                                  (() => {
                                    try {
                                      return $state.getNelsonFeatures?.data?.map(
                                        (feature, index) => ({
                                          ...feature,
                                          active:
                                            $state.checkboxSilver[index]
                                              .isChecked
                                        })
                                      );
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                ]
                              };
                              return $globalActions[
                                "Fragment.apiRequest"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["changefeature"] != null &&
                          typeof $steps["changefeature"] === "object" &&
                          typeof $steps["changefeature"].then === "function"
                        ) {
                          $steps["changefeature"] = await $steps[
                            "changefeature"
                          ];
                        }

                        $steps["sendLog"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  (() => {
                                    try {
                                      return {
                                        group: "pricing",
                                        data: { who: $state.auth.data },
                                        type: "click-active-button"
                                      };
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                ]
                              };
                              return $globalActions["Splunk.sendLog"]?.apply(
                                null,
                                [...actionArgs.args]
                              );
                            })()
                          : undefined;
                        if (
                          $steps["sendLog"] != null &&
                          typeof $steps["sendLog"] === "object" &&
                          typeof $steps["sendLog"].then === "function"
                        ) {
                          $steps["sendLog"] = await $steps["sendLog"];
                        }
                      }}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"description"}
                  data-plasmic-override={overrides.description}
                  className={classNames(projectcss.all, sty.description)}
                >
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "accordion",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.accordion),
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem___3Lf4G
                            )}
                            id={1}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kl8Jh
                                )}
                              >
                                {
                                  "\u0646\u0648\u0628\u062a\u200c\u062f\u0647\u06cc \u0645\u0637\u0628"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bvMng
                              )}
                            >
                              {
                                "\u0628\u0647 \u067e\u0632\u0634\u06a9\u0627\u0646 \u0627\u062c\u0627\u0632\u0647 \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0646\u0648\u0628\u062a\u200c\u0647\u0627\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06a9\u0646\u0646\u062f. \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u0646\u062f \u0627\u0632 \u0637\u0631\u06cc\u0642 \u067e\u0646\u0644\u060c \u0632\u0645\u0627\u0646\u200c\u0647\u0627\u06cc \u0622\u0632\u0627\u062f \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u0648 \u0646\u0648\u0628\u062a \u062e\u0648\u062f \u0631\u0627 \u0631\u0632\u0631\u0648 \u06a9\u0646\u0646\u062f."
                              }
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fzXvT
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__w4J0J
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__gQuJx
                                      )}
                                    >
                                      {
                                        "\u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0628\u0647 \u0634\u06cc\u0648\u0647 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc \u0648 \u062d\u0636\u0648\u0631\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__rBgdt
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__q6DRn
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a\u060c \u0644\u063a\u0648 \u0648 \u06cc\u0627 \u062c\u0627\u0628\u0647 \u062c\u0627\u06cc\u06cc \u0646\u0648\u0628\u062a \u062a\u0648\u0633\u0637 \u0628\u06cc\u0645\u0627\u0631"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__joEam
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__egJzq
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0648 \u0644\u063a\u0648 \u0646\u0648\u0628\u062a  \u062f\u0631 \u067e\u0646\u0644 \u062a\u0648\u0633\u0637 \u067e\u0632\u0634\u06a9"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__edUc
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__sxfjV
                                      )}
                                    >
                                      {
                                        "\u06cc\u06a9\u067e\u0627\u0631\u0686\u06af\u06cc \u06a9\u0627\u0645\u0644 \u0646\u0648\u0628\u062a \u0647\u0627\u06cc \u0631\u0632\u0631\u0648 \u0634\u062f\u0647 \u0627\u0632 \u06a9\u0627\u0646\u0627\u0644 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062f\u0631 \u067e\u0646\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__y4Sqs
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__r9Qc3
                                      )}
                                    >
                                      {
                                        "\u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0648\u0628\u062a \u0628\u0631\u0627\u0633\u0627\u0633 \u062a\u0627\u0631\u06cc\u062e \u0648 \u0632\u0645\u0627\u0646 \u062f\u0644\u062e\u0648\u0627\u0647 \u0648 \u062b\u0628\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631 \u062c\u0647\u062a \u0627\u062e\u0630 \u0646\u0648\u0628\u062a"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__fAWyl
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__zjKh1
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u062a (\u0628\u0631\u0627\u06cc \u0645\u062b\u0627\u0644 \u0628\u0627\u0632\u0647\u200c\u06cc \u0632\u0645\u0627\u0646\u06cc \u0648\u06cc\u0632\u06cc\u062a \u067e\u0632\u0634\u06a9)"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__loUk5
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__af8Bx
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0633\u0627\u0639\u062a \u06a9\u0627\u0631\u06cc \u0628\u0631\u0627\u06cc \u0645\u0637\u0628"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__sq39G
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__suqXe
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0631\u0648\u0632 \u062a\u0639\u0637\u06cc\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__pbwmq
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__e1Dvm
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06cc\u06a9 \u0628\u0627\u0632\u0647 \u0632\u0645\u0627\u0646\u06cc \u062a\u0639\u0637\u06cc\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__emRvO
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__k5RwV
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0645\u0631\u062e\u0635\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u0633\u0627\u0639\u062a\u06cc \u0628\u0631\u0627\u06cc \u067e\u0632\u0634\u06a9"
                                      }
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__yKfda
                                      )}
                                    >
                                      {
                                        "\u067e\u0632\u0634\u06a9 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0627\u0632 \u0627\u0645\u0631\u0648\u0632\u060c \u0641\u0631\u062f\u0627\u060c \u06f3\u060c \u06f4 \u0648 ..... \u0631\u0648\u0632 \u062a\u0627 \u0647\u0631 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u062f\u0631 \u0646\u0638\u0631 \u062f\u0627\u0631\u062f \u0646\u0648\u0628\u062a\u200c\u062f\u0647\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u062f."
                                      }
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__bn5Do
                                      )}
                                    >
                                      {
                                        "\u067e\u0632\u0634\u06a9 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0645\u0634\u062e\u0635 \u06a9\u0646\u062f \u06a9\u0647 \u062a\u0627 \u0686\u0646\u062f\u0633\u0627\u0639\u062a \u067e\u06cc\u0634 \u0627\u0632 \u0632\u0645\u0627\u0646 \u0646\u0648\u0628\u062a\u200c\u060c \u0648\u062c\u0647 \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u0628\u06cc\u0645\u0627\u0631 \u062f\u0631 \u0635\u0648\u0631\u062a \u0644\u063a\u0648 \u0646\u0648\u0628\u062a \u0645\u0633\u062a\u0631\u062f \u06af\u0631\u062f\u062f.\n\n"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__l7Qvd
                            )}
                            id={2}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zw44C
                                )}
                              >
                                {
                                  "\u0648\u06cc\u0632\u06cc\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zLxHh
                              )}
                            >
                              {
                                " \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0628\u0631\u0627\u06cc \u0648\u06cc\u0632\u06cc\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0627 \u067e\u0632\u0634\u06a9\u0627\u0646 \u0646\u0648\u0628\u062a \u0628\u06af\u06cc\u0631\u0646\u062f.  \u0628\u0631\u06af\u0632\u0627\u0631\u06cc \u0648\u06cc\u0632\u06cc\u062a\u200c\u0647\u0627\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u062f\u0631 \u0628\u0633\u062a\u0631 \u067e\u06cc\u0627\u0645\u200c\u0631\u0633\u0627\u0646 \u0627\u06cc\u062a\u0627 \u0648 \u0648\u0627\u062a\u0633\u0627\u067e \u0648 \u062f\u0631 \u0635\u0648\u0631\u062a \u0646\u06cc\u0627\u0632 \u062a\u0645\u0627\u0633 \u0627\u0645\u0646 \u0627\u0633\u062a."
                              }
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jxocg
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__jHaLt
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__teNZi
                                      )}
                                    >
                                      {
                                        "\u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0628\u0647 \u0634\u06cc\u0648\u0647 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__f2Xpp
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__f0Nlo
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0633\u0627\u0639\u062a \u06a9\u0627\u0631\u06cc \u0628\u0631\u0627\u06cc \u0648\u06cc\u0632\u06cc\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__seini
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__dt5EM
                                      )}
                                    >
                                      {
                                        "\u0628\u0631\u06af\u0632\u0627\u0631\u06cc \u0648\u06cc\u0632\u06cc\u062a \u0647\u0627\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u062f\u0631 \u0628\u0633\u062a\u0631 \u067e\u06cc\u0627\u0645 \u0631\u0633\u0627\u0646 \u0627\u06cc\u062a\u0627 \u0648 \u0648\u0627\u062a\u0633\u0627\u067e"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__eq3Ok
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__pw8Q
                                      )}
                                    >
                                      {
                                        "\u0642\u0627\u0628\u0644\u06cc\u062a \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u062a\u0645\u0627\u0633 \u0627\u0645\u0646"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__r0DG
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__zn0Yb
                                      )}
                                    >
                                      {
                                        "\u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u0644\u062d\u0638\u0647 \u0634\u0631\u0648\u0639 \u0648\u06cc\u0632\u06cc\u062a \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___0Okay
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__yd7Ap
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0646\u0633\u062e\u0647 \u0627\u0644\u06a9\u062a\u0631\u0648\u0646\u06cc\u06a9 \u0628\u0631\u0627\u06cc \u0628\u06cc\u0645\u0627\u0631"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___26DpB
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__aH2Ss
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u0644\u063a\u0648 \u0646\u0648\u0628\u062a \u0648\u06cc\u0632\u06cc\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__wHmhp
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__asCWf
                                      )}
                                    >
                                      {
                                        "\u0642\u0627\u0628\u0644\u06cc\u062a \u0627\u0639\u0645\u0627\u0644 \u0645\u0631\u062e\u0635\u06cc \u0627\u0636\u0637\u0631\u0627\u0631\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___79OH5
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__dnwdW
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0631\u0648\u0632 \u062a\u0639\u0637\u06cc\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__oib6C
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li___0I6Ky
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06cc\u06a9 \u0628\u0627\u0632\u0647 \u0632\u0645\u0627\u0646\u06cc \u062a\u0639\u0637\u06cc\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__poWqX
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__wYzcY
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0645\u0631\u062e\u0635\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u0633\u0627\u0639\u062a\u06cc \u0628\u0631\u0627\u06cc \u067e\u0632\u0634\u06a9"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__q8K5G
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__jTyjl
                                      )}
                                    >
                                      {
                                        "\u06cc\u06a9\u067e\u0627\u0631\u0686\u06af\u06cc \u06a9\u0627\u0645\u0644 \u0646\u0648\u0628\u062a \u0647\u0627\u06cc \u0631\u0632\u0631\u0648 \u0634\u062f\u0647 \u0627\u0632 \u06a9\u0627\u0646\u0627\u0644 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062f\u0631 \u067e\u0646\u0644"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___0C4Gr
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__nCFq
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u062a (\u0628\u0631\u0627\u06cc \u0645\u062b\u0627\u0644 \u0628\u0627\u0632\u0647\u200c\u06cc \u0632\u0645\u0627\u0646\u06cc \u0648\u06cc\u0632\u06cc\u062a \u067e\u0632\u0634\u06a9)"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["accordion", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "accordion.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"accordion"}
                        data-plasmic-override={overrides.accordion}
                        {...child$Props}
                      />
                    );
                  })()}
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "accordion2",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.accordion2),
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__cmVna
                            )}
                            id={1}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__p5Wz
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {
                                      "\u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc"
                                    }
                                  </span>
                                </React.Fragment>
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oK5El
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__yaPiG
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__iafZi
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u062a\u0635\u0648\u06cc\u0631"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___9KcGh
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__rnRei
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0639\u0646\u0627\u0648\u06cc\u0646 \u062a\u062e\u0635\u0635\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__gx9Bf
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__gSx17
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0628\u06cc\u0648\u06af\u0631\u0627\u0641\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__miyQu
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__t8Ek
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0622\u062f\u0631\u0633 \u0648 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u0645\u0637\u0628"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__sBmHb
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__pjNxe
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0644\u0648\u06a9\u06cc\u0634\u0646\u200c (\u0628\u0647 \u0632\u0648\u062f\u06cc)"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h37Rm
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__rCwu
                                      )}
                                    >
                                      {
                                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627 \u0648 \u062f\u0633\u062a\u0631\u0633\u06cc\u200c\u0647\u0627\u06cc \u0645\u0637\u0628 (\u0628\u0647 \u0632\u0648\u062f\u06cc)"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem___7JRug
                            )}
                            id={2}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__h21Z4
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {
                                      "\u0627\u0645\u06a9\u0627\u0646 \u067e\u0631\u062f\u0627\u062e\u062a \u062d\u0642 \u0648\u06cc\u0632\u06cc\u062a"
                                    }
                                  </span>
                                </React.Fragment>
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__stxrh
                              )}
                            >
                              {
                                "\u0627\u0645\u06a9\u0627\u0646 \u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0631\u0627\u06cc \u0646\u0648\u0628\u062a \u0647\u0627 \u06cc\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u0648\u062c\u0647 \u0628\u06cc\u0639\u0627\u0646\u0647 \u0627\u0632 \u0637\u0631\u06cc\u0642 \u062f\u0631\u06af\u0627\u0647 \u067e\u0631\u062f\u0627\u062e\u062a"
                              }
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__m60Pk
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__qeqt4
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__lPmh9
                                      )}
                                    >
                                      {
                                        "\u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u062f\u0631 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul___1Usty
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__gpnJ
                                      )}
                                    >
                                      {
                                        "\u062b\u0628\u062a \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062a\u0633\u0648\u06cc\u0647 \u062d\u0633\u0627\u0628"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__bHhqq
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__ddpCp
                                      )}
                                    >
                                      {
                                        "\u06af\u0632\u0627\u0631\u0634\u0627\u062a \u0645\u0627\u0644\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__douwT
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__xen9J
                                      )}
                                    >
                                      {
                                        "\u0642\u0627\u0628\u0644\u06cc\u062a \u0639\u0648\u062f\u062a \u0647\u0632\u06cc\u0646\u0647 \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u062f\u0631 \u0635\u0648\u0631\u062a \u0644\u063a\u0648 \u0646\u0648\u0628\u062a"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["accordion2", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "accordion2.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"accordion2"}
                        data-plasmic-override={overrides.accordion2}
                        {...child$Props}
                      />
                    );
                  })()}
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "feedbacks",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.feedbacks),
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__hhtng
                            )}
                            id={1}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ziGAh
                                )}
                              >
                                {
                                  "\u0646\u0638\u0631\u0633\u0646\u062c\u06cc \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u062d\u0636\u0648\u0631\u06cc"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kdi2D
                              )}
                            >
                              {
                                "\u067e\u0632\u0634\u06a9\u0627\u0646\u06cc \u06a9\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646\u06cc \u062f\u0627\u0631\u0646\u062f \u06a9\u0647 \u0627\u0632 \u067e\u0630\u06cc\u0631\u063424 \u0646\u0648\u0628\u062a \u0646\u06af\u0631\u0641\u062a\u0647 \u0627\u0646\u062f \u0648 \u0645\u0627\u06cc\u0644 \u0627\u0646\u062f \u0646\u0638\u0631\u0627\u062a \u0627\u06cc\u0646 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u062f\u0631 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644\u0634\u0627\u0646 \u062f\u0631\u062c \u0634\u0648\u062f\u060c \u0628\u0627 \u06a9\u0645\u06a9 QR CODE \u062f\u0631 \u0645\u0637\u0628 \u0645\u06cc\u062a\u0648\u0627\u0646\u0646\u062f \u0627\u0632 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u06a9\u0646\u0646\u062f \u062a\u0627 \u0646\u0638\u0631 \u062e\u0648\u062f \u0631\u0627 \u062f\u0631\u062c \u06a9\u0646\u0646\u062f.\n\u0627\u06cc\u0646 \u0646\u0638\u0631\u0627\u062a \u067e\u0633 \u0627\u0632 \u0628\u0631\u0631\u0633\u06cc \u0648 \u062a\u0627\u06cc\u06cc\u062f\u060c \u062f\u0631 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u067e\u0632\u0634\u06a9 \u0646\u0645\u0627\u06cc\u0634 \u062f\u0627\u062f\u0647 \u062e\u0648\u0627\u0647\u062f \u0634\u062f\n\u0648\u062c\u0648\u062f \u0646\u0638\u0631\u0627\u062a \u0628\u0647 \u062a\u0635\u0645\u06cc\u0645 \u0628\u0647\u062a\u0631 \u0628\u06cc\u0645\u0627\u0631 \u062c\u0647\u062a \u0627\u0646\u062a\u062e\u0627\u0628 \u062f\u0631\u0645\u0627\u0646\u06af\u0631 \u06a9\u0645\u06a9 \u0645\u06cc\u06a9\u0646\u062f.\n"
                              }
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ifJhr
                              )}
                            >
                              {""}
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__r3DsA
                            )}
                            id={2}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__niCxl
                                )}
                              >
                                {
                                  "\u0646\u0638\u0631\u0633\u0646\u062c\u06cc \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wCu1H
                              )}
                            >
                              {
                                " \u067e\u0632\u0634\u06a9\u06cc \u06a9\u0647 \u062a\u0639\u062f\u0627\u062f \u0646\u0638\u0631\u0627\u062a\u0634 \u0627\u0632 300 \u0639\u062f\u062f \u0628\u06cc\u0634\u062a\u0631 \u0628\u0627\u0634\u062f\u060c \u0628\u0631\u0627\u06cc \u0628\u06cc\u0645\u0627\u0631\u0627\u0646\u0634 \u067e\u06cc\u0627\u0645\u06a9 \u062c\u0647\u062a \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062f\u0631\u062c \u0646\u0638\u0631 \u0627\u0631\u0633\u0627\u0644 \u0646\u0645\u06cc \u0634\u0648\u062f.\n\u0686\u0646\u0627\u0646\u0686\u0647 \u0645\u0627\u06cc\u0644 \u0647\u0633\u062a\u06cc\u062f \u062c\u0647\u062a \u062f\u0631\u062c \u0646\u0638\u0631 \u0628\u0631\u0627\u06cc \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0631\u0633\u0627\u0644 \u0634\u0648\u062f \u0648 \u0628\u06cc\u0634 \u0627\u0632 5 \u0628\u0631\u0627\u0628\u0631 \u0628\u06cc\u0634\u062a\u0631 \u0646\u0638\u0631 \u062c\u0630\u0628 \u06a9\u0646\u06cc\u062f\u060c \u0633\u0631\u0648\u06cc\u0633 \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645 \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u0641\u0639\u0627\u0644 \u0645\u06cc \u0634\u0648\u062f \u0648 \u062f\u0631 \u067e\u0627\u06cc\u0627\u0646 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0646\u0638\u0631 \u062b\u0628\u062a \u0634\u062f\u0647 \u0645\u0628\u0644\u063a 10.000 \u062a\u0648\u0645\u0627\u0646 \u0628\u0647 \u062d\u0633\u0627\u0628 \u0634\u0645\u0627 \u0644\u062d\u0627\u0638 \u0645\u06cc \u0634\u0648\u062f."
                              }
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["feedbacks", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "feedbacks.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"feedbacks"}
                        data-plasmic-override={overrides.feedbacks}
                        {...child$Props}
                      />
                    );
                  })()}
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "accordion3",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.accordion3),
                      items: (
                        <AntdAccordionItem
                          className={classNames(
                            "__wab_instance",
                            sty.accordionItem__fmRbS
                          )}
                          id={2}
                          label2={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lImYn
                              )}
                            >
                              {
                                "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x10QY
                            )}
                          >
                            {
                              " \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u062b\u0628\u062a \u062a\u06cc\u06a9\u062a \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0632\u0645\u0627\u0646 \u067e\u0627\u0633\u062e \u06af\u0648\u06cc\u06cc \u0628\u0647 \u062a\u06cc\u06a9\u062a \u0647\u0627 \u06a9\u0645\u062a\u0631 \u0627\u0632 \u062f\u0648 \u0631\u0648\u0632 \u06a9\u0627\u0631\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f."
                            }
                          </div>
                        </AntdAccordionItem>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["accordion3", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "accordion3.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"accordion3"}
                        data-plasmic-override={overrides.accordion3}
                        {...child$Props}
                      />
                    );
                  })()}
                  {(() => {
                    const child$Props = {
                      activeKey: generateStateValueProp($state, [
                        "accordion4",
                        "activePanelId"
                      ]),
                      bordered: true,
                      className: classNames("__wab_instance", sty.accordion4),
                      items: (
                        <React.Fragment>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem___9Be7P
                            )}
                            id={1}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___53Qj9
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u062e\u062a\u0635\u0627\u0635\u06cc"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kelr0
                              )}
                            >
                              {
                                "\u0645\u062f\u06cc\u0631\u06cc\u062a \u0648 \u0627\u0646\u062c\u0627\u0645 \u062a\u0645\u0627\u0645\u06cc \u0627\u0645\u0648\u0631 \u0645\u0631\u062a\u0628\u0637 \u0628\u0627 \u067e\u0646\u0644 \u067e\u0632\u0634\u06a9 \u062f\u0631 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u062a\u0648\u0633\u0637 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0634\u0645\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u0634\u0648\u062f."
                              }
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mye1I
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__s3AxA
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i6Zoh
                                      )}
                                    >
                                      {
                                        "\u062f\u0633\u062a\u0631\u0633\u06cc \u062a\u0644\u0641\u0646\u06cc \u0648 \u0645\u062a\u0646\u06cc \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0627\u0632 \u0633\u0627\u0639\u062a \u06f8 \u0635\u0628\u062d \u0627\u0644\u06cc \u06f2\u06f2"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__lSlmZ
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__qSrd
                                      )}
                                    >
                                      {
                                        "\u062b\u0628\u062a \u0645\u0631\u062e\u0635\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__ddjjK
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__nfAm1
                                      )}
                                    >
                                      {
                                        "\u062b\u0628\u062a \u0648 \u06cc\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u0639\u0646\u0627\u0648\u06cc\u0646 \u062a\u062e\u0635\u0635"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__w1H2P
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__aoKcT
                                      )}
                                    >
                                      {
                                        "\u062b\u0628\u062a \u0648 \u06cc\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u0628\u06cc\u0648\u06af\u0631\u0627\u0641\u06cc"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__daAji
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__of5J2
                                      )}
                                    >
                                      {
                                        "\u062a\u063a\u06cc\u06cc\u0631 \u0633\u0627\u0639\u062a \u06a9\u0627\u0631\u06cc \u0645\u0637\u0628"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__su4G
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__gCtTx
                                      )}
                                    >
                                      {
                                        "\u062a\u063a\u06cc\u06cc\u0631 \u0622\u062f\u0631\u0633 \u0648 \u06cc\u0627 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646"
                                      }
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                          </AntdAccordionItem>
                          <AntdAccordionItem
                            className={classNames(
                              "__wab_instance",
                              sty.accordionItem__lWoMe
                            )}
                            id={2}
                            label2={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kdSoe
                                )}
                              >
                                {
                                  "\u067e\u0646\u0644 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc"
                                }
                              </div>
                            }
                            showArrow={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__s1Sg2
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0642\u0627\u0628\u0644\u06cc\u062a \u0646\u0648\u0622\u0648\u0631\u0627\u0646\u0647 \u00ab\u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631\u00bb \u0628\u0647 \u067e\u0632\u0634\u06a9\u0627\u0646 \u0648 \u06a9\u0627\u062f\u0631 \u062f\u0631\u0645\u0627\u0646\u06cc \u0627\u06cc\u0646 \u0627\u0645\u06a9\u0627\u0646 \u0631\u0627 \u0645\u06cc\u200c\u062f\u0647\u062f \u062a\u0627 \u0628\u0627 \u0628\u0647\u0631\u0647\u200c\u06af\u06cc\u0631\u06cc \u0627\u0632 \u0627\u0639\u0644\u0627\u0646\u200c\u0647\u0627 \u0648 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc\u200c\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631\u060c \u0645\u062f\u06cc\u0631\u06cc\u062a \u0632\u0645\u0627\u0646 \u062f\u0642\u06cc\u0642\u200c\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f \u0648 \u062a\u062c\u0631\u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0631\u0627 \u0628\u0647\u0628\u0648\u062f \u0628\u062e\u0634\u0646\u062f. \u0627\u06cc\u0646 \u0648\u06cc\u0698\u06af\u06cc \u0628\u0627 \u0647\u062f\u0641 \u0633\u0627\u062f\u0647\u200c\u0633\u0627\u0632\u06cc \u0641\u0631\u0627\u06cc\u0646\u062f\u0647\u0627\u06cc \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0648 \u0627\u0641\u0632\u0627\u06cc\u0634 \u0628\u0647\u0631\u0647\u200c\u0648\u0631\u06cc \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a."
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__txspQ
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0627\u0637\u0644\u0627\u0639 \u0627\u0632 \u0631\u0632\u0631\u0648 \u0646\u0648\u0628\u062a \u062c\u062f\u06cc\u062f:"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0648 \u06a9\u0627\u062f\u0631 \u062f\u0631\u0645\u0627\u0646\u06cc \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u0646\u062f \u0628\u0647 \u0645\u062d\u0636 \u0631\u0632\u0631\u0648 \u0646\u0648\u0628\u062a \u062c\u062f\u06cc\u062f \u0628\u0647\u200c\u0637\u0648\u0631 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0632 \u0622\u0646 \u0645\u0637\u0644\u0639 \u0634\u0648\u0646\u062f. \u0627\u06cc\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0647 \u0622\u0646\u0647\u0627 \u0641\u0631\u0635\u062a \u06a9\u0627\u0641\u06cc \u0628\u0631\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0631\u06cc\u0632\u06cc \u0628\u0647\u062a\u0631 \u0648 \u0647\u0645\u0627\u0647\u0646\u06af\u06cc \u0628\u0627 \u062f\u06cc\u06af\u0631 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qY2Lo
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 600 }}
                                >
                                  {
                                    "\u0644\u063a\u0648 \u0646\u0648\u0628\u062a\u200c:"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0646\u0648\u0628\u062a\u06cc \u0644\u063a\u0648 \u0634\u0648\u062f\u060c \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0628\u0647\u200c\u0633\u0631\u0639\u062a \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u060c \u067e\u0632\u0634\u06a9 \u0648 \u0645\u0646\u0634\u06cc \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u200c\u0634\u0648\u062f \u062a\u0627 \u0627\u0632 \u062a\u062f\u0627\u062e\u0644 \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0647\u0627 \u062c\u0644\u0648\u06af\u06cc\u0631\u06cc \u0634\u0648\u062f \u0648 \u0638\u0631\u0641\u06cc\u062a \u062e\u0627\u0644\u06cc \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u062f\u06cc\u06af\u0631 \u0627\u062e\u062a\u0635\u0627\u0635 \u06cc\u0627\u0628\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jszfu
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u06cc\u0627\u062f\u0627\u0648\u0631\u06cc \u0646\u0648\u0628\u062a \u0628\u06cc\u0645\u0627\u0631 (\u0628\u0647 \u0632\u0648\u062f\u06cc): "
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u0633\u06cc\u0633\u062a\u0645 \u0628\u0647\u200c\u0637\u0648\u0631 \u0647\u0648\u0634\u0645\u0646\u062f \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u067e\u06cc\u0634 \u0627\u0632 \u0632\u0645\u0627\u0646 \u0646\u0648\u0628\u062a\u0634\u0627\u0646 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u200c\u06a9\u0646\u062f. \u0627\u06cc\u0646 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f \u062a\u0627 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0628\u0627 \u0622\u0645\u0627\u062f\u06af\u06cc \u06a9\u0627\u0645\u0644 \u062f\u0631 \u0645\u0637\u0628 \u062d\u0627\u0636\u0631 \u0634\u0648\u0646\u062f\u060c \u06a9\u0647 \u0628\u0647 \u06a9\u0627\u0647\u0634 \u063a\u06cc\u0628\u062a\u200c\u0647\u0627 \u0648 \u0628\u0647\u0628\u0648\u062f \u0646\u0638\u0645 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0647\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iTxQt
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u062f\u0631\u06cc\u0627\u0641\u062a\u200c\u06a9\u0646\u0646\u062f\u06af\u0627\u0646 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc:"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u0642\u0627\u0628\u0644\u06cc\u062a \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0628\u0647 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f \u062a\u0627 \u0627\u0639\u0644\u0627\u0646\u200c\u0647\u0627 \u0631\u0627 \u0628\u0647 \u0627\u0641\u0631\u0627\u062f \u0645\u062e\u062a\u0644\u0641\u060c \u0627\u0632 \u062c\u0645\u0644\u0647 \u067e\u0632\u0634\u06a9\u0627\u0646\u060c \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0648 \u062d\u062a\u06cc \u0645\u0646\u0634\u06cc\u200c\u0647\u0627\u060c \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u0646\u062f. \u0627\u06cc\u0646 \u0648\u06cc\u0698\u06af\u06cc \u0628\u0627\u0639\u062b \u0645\u06cc\u200c\u0634\u0648\u062f \u0647\u0645\u0647 \u0627\u0641\u0631\u0627\u062f \u062f\u0631\u06af\u06cc\u0631 \u062f\u0631 \u0641\u0631\u0622\u06cc\u0646\u062f \u062f\u0631\u0645\u0627\u0646 \u0627\u0632 \u0648\u0636\u0639\u06cc\u062a \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0631\u06cc\u0632\u06cc \u0622\u06af\u0627\u0647 \u0628\u0627\u0634\u0646\u062f."
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8MxfF
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700 }}
                                >
                                  {
                                    "\u0646\u06a9\u0627\u062a \u0645\u0647\u0645:"
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__puir
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__fu7LE
                                      )}
                                    >
                                      <React.Fragment>
                                        <span
                                          className={
                                            "plasmic_default__all plasmic_default__span"
                                          }
                                          style={{ fontWeight: 400 }}
                                        >
                                          {
                                            "\u067e\u0632\u0634\u06a9\u0627\u0646 \u0641\u0642\u0637 \u0647\u0632\u06cc\u0646\u0647 \u0627\u0639\u0644\u0627\u0646\u200c\u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644\u06cc \u0631\u0627 \u067e\u0631\u062f\u0627\u062e\u062a \u0645\u06cc\u200c\u06a9\u0646\u0646\u062f \u0648 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u0646\u062f \u0628\u0631 \u0627\u0633\u0627\u0633 \u0646\u06cc\u0627\u0632 \u062e\u0648\u062f \u0647\u0632\u06cc\u0646\u0647\u200c\u0647\u0627 \u0631\u0627 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06a9\u0646\u0646\u062f."
                                          }
                                        </span>
                                      </React.Fragment>
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__udDK
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__y1Cn
                                      )}
                                    >
                                      <React.Fragment>
                                        <span
                                          className={
                                            "plasmic_default__all plasmic_default__span"
                                          }
                                          style={{ fontWeight: 400 }}
                                        >
                                          {
                                            "\u0627\u06cc\u0646 \u0633\u0631\u0648\u06cc\u0633 \u0628\u0647\u200c\u0635\u0648\u0631\u062a \u00ab\u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0647 \u0627\u0632\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647\u00bb \u0627\u0631\u0627\u0626\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f\u061b \u0628\u0647 \u0627\u06cc\u0646 \u0645\u0639\u0646\u06cc \u06a9\u0647 \u0647\u0631 \u0627\u0639\u0644\u0627\u0646 \u0628\u0627 \u0647\u0632\u06cc\u0646\u0647 \u0645\u0631\u0628\u0648\u0637\u0647 \u062b\u0628\u062a \u0648 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u200c\u0634\u0648\u062f."
                                          }
                                        </span>
                                      </React.Fragment>
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__rpy1
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__yK0N3
                                      )}
                                    >
                                      <React.Fragment>
                                        <span
                                          className={
                                            "plasmic_default__all plasmic_default__span"
                                          }
                                          style={{ fontWeight: 400 }}
                                        >
                                          {
                                            "\u0633\u06cc\u0633\u062a\u0645 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0628\u0647 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f \u0627\u0632 \u067e\u06cc\u0627\u0645\u200c\u0647\u0627\u06cc \u067e\u06cc\u0634\u200c\u0641\u0631\u0636 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u0646\u062f \u06cc\u0627 \u067e\u06cc\u0627\u0645 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f \u0631\u0627 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u0646\u062f."
                                          }
                                        </span>
                                      </React.Fragment>
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vXDfy
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 400 }}
                                >
                                  {
                                    "\u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0628\u0627 \u0627\u06cc\u0646 \u0627\u0628\u0632\u0627\u0631 \u062c\u062f\u06cc\u062f\u060c \u0631\u0627\u0647\u06a9\u0627\u0631\u06cc \u0645\u0648\u062b\u0631 \u0628\u0631\u0627\u06cc \u0628\u0647\u06cc\u0646\u0647\u200c\u0633\u0627\u0632\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0631\u06cc\u0632\u06cc\u060c \u0635\u0631\u0641\u0647\u200c\u062c\u0648\u06cc\u06cc \u062f\u0631 \u0648\u0642\u062a \u0648 \u062a\u0645\u0631\u06a9\u0632 \u0628\u06cc\u0634\u062a\u0631 \u0628\u0631 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u0628\u0627 \u06a9\u06cc\u0641\u06cc\u062a \u0641\u0631\u0627\u0647\u0645 \u0622\u0648\u0631\u062f\u0647 \u0627\u0633\u062a. \u0627\u06cc\u0646 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0645\u200c\u0627\u06a9\u0646\u0648\u0646 \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u062a\u0645\u0627\u0645\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4 \u0642\u0631\u0627\u0631 \u06af\u0631\u0641\u062a\u0647 \u0648 \u0622\u0645\u0627\u062f\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0633\u062a."
                                  }
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__m5LC8
                              )}
                            >
                              {"\n"}
                            </div>
                          </AntdAccordionItem>
                        </React.Fragment>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "activePanelId",
                          ["accordion4", "activePanelId"],
                          AntdAccordion_Helpers
                        ).apply(null, eventArgs);

                        if (eventArgs.length > 1 && eventArgs[1]) {
                          return;
                        }
                      }
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "activePanelId",
                          plasmicStateName: "accordion4.activePanelId"
                        }
                      ],
                      [],
                      AntdAccordion_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdAccordion
                        data-plasmic-name={"accordion4"}
                        data-plasmic-override={overrides.accordion4}
                        {...child$Props}
                      />
                    );
                  })()}
                </div>
              </Stack__>
            ) : null}
            <ApiRequest
              data-plasmic-name={"apiRequestForNotificationSetting"}
              data-plasmic-override={overrides.apiRequestForNotificationSetting}
              className={classNames(
                "__wab_instance",
                sty.apiRequestForNotificationSetting
              )}
              errorDisplay={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fHvk4
                  )}
                >
                  {"Error fetching data"}
                </div>
              }
              loadingDisplay={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cyCs
                  )}
                >
                  {"Loading..."}
                </div>
              }
              method={"GET"}
              onError={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "apiRequestForNotificationSetting",
                  "error"
                ]).apply(null, eventArgs);

                if (eventArgs.length > 1 && eventArgs[1]) {
                  return;
                }
              }}
              onLoading={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "apiRequestForNotificationSetting",
                  "loading"
                ]).apply(null, eventArgs);

                if (eventArgs.length > 1 && eventArgs[1]) {
                  return;
                }
              }}
              onSuccess={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "apiRequestForNotificationSetting",
                  "data"
                ]).apply(null, eventArgs);

                if (eventArgs.length > 1 && eventArgs[1]) {
                  return;
                }
              }}
              ref={ref => {
                $refs["apiRequestForNotificationSetting"] = ref;
              }}
              url={"https://apigw.paziresh24.com/v1/martin/events"}
            />
          </ApiRequest>
          <ApiRequest
            data-plasmic-name={"customerfeatures"}
            data-plasmic-override={overrides.customerfeatures}
            className={classNames("__wab_instance", sty.customerfeatures)}
            errorDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2JYX
                )}
              >
                {"Error fetching data"}
              </div>
            }
            loadingDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nnsl
                )}
              >
                {"Loading..."}
              </div>
            }
            method={"GET"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "customerfeatures",
                "error"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "customerfeatures",
                "loading"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "customerfeatures",
                "data"
              ]).apply(null, eventArgs);

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            ref={ref => {
              $refs["customerfeatures"] = ref;
            }}
            url={
              "https://apigw.paziresh24.com/v1/n8n-nelson/webhook/get-customer-nelson-features"
            }
          />

          <MetrikaYandex
            className={classNames("__wab_instance", sty.metrikaYandex___3Cov7)}
          />

          <ApiRequest
            data-plasmic-name={"auth"}
            data-plasmic-override={overrides.auth}
            className={classNames("__wab_instance", sty.auth)}
            errorDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__umWda
                )}
              >
                {"Error fetching data"}
              </div>
            }
            loadingDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kEbV9
                )}
              >
                {"Loading..."}
              </div>
            }
            method={"GET"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["auth", "error"]).apply(
                null,
                eventArgs
              );

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["auth", "loading"]).apply(
                null,
                eventArgs
              );

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["auth", "data"]).apply(
                null,
                eventArgs
              );

              if (eventArgs.length > 1 && eventArgs[1]) {
                return;
              }
            }}
            ref={ref => {
              $refs["auth"] = ref;
            }}
            url={"https://apigw.paziresh24.com/v1/auth/me"}
          />

          <MetrikaYandex
            className={classNames("__wab_instance", sty.metrikaYandex___8M9Ls)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "getNelsonFeatures",
    "outlineVertical",
    "titleVertical",
    "h2",
    "kindOfPrice",
    "silverVertical",
    "checkbox2",
    "subjectSilver",
    "checkboxSilver",
    "priceSilver",
    "button",
    "description",
    "accordion",
    "accordion2",
    "feedbacks",
    "accordion3",
    "accordion4",
    "apiRequestForNotificationSetting",
    "customerfeatures",
    "auth"
  ],
  getNelsonFeatures: [
    "getNelsonFeatures",
    "outlineVertical",
    "titleVertical",
    "h2",
    "kindOfPrice",
    "silverVertical",
    "checkbox2",
    "subjectSilver",
    "checkboxSilver",
    "priceSilver",
    "button",
    "description",
    "accordion",
    "accordion2",
    "feedbacks",
    "accordion3",
    "accordion4",
    "apiRequestForNotificationSetting"
  ],
  outlineVertical: [
    "outlineVertical",
    "titleVertical",
    "h2",
    "kindOfPrice",
    "silverVertical",
    "checkbox2",
    "subjectSilver",
    "checkboxSilver",
    "priceSilver",
    "button",
    "description",
    "accordion",
    "accordion2",
    "feedbacks",
    "accordion3",
    "accordion4"
  ],
  titleVertical: ["titleVertical", "h2"],
  h2: ["h2"],
  kindOfPrice: [
    "kindOfPrice",
    "silverVertical",
    "checkbox2",
    "subjectSilver",
    "checkboxSilver",
    "priceSilver"
  ],
  silverVertical: [
    "silverVertical",
    "checkbox2",
    "subjectSilver",
    "checkboxSilver",
    "priceSilver"
  ],
  checkbox2: ["checkbox2"],
  subjectSilver: ["subjectSilver", "checkboxSilver"],
  checkboxSilver: ["checkboxSilver"],
  priceSilver: ["priceSilver"],
  button: ["button"],
  description: [
    "description",
    "accordion",
    "accordion2",
    "feedbacks",
    "accordion3",
    "accordion4"
  ],
  accordion: ["accordion"],
  accordion2: ["accordion2"],
  feedbacks: ["feedbacks"],
  accordion3: ["accordion3"],
  accordion4: ["accordion4"],
  apiRequestForNotificationSetting: ["apiRequestForNotificationSetting"],
  customerfeatures: ["customerfeatures"],
  auth: ["auth"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  getNelsonFeatures: typeof ApiRequest;
  outlineVertical: "div";
  titleVertical: "div";
  h2: "h2";
  kindOfPrice: "div";
  silverVertical: "div";
  checkbox2: typeof Checkbox;
  subjectSilver: "div";
  checkboxSilver: typeof Checkbox;
  priceSilver: "div";
  button: typeof Button;
  description: "div";
  accordion: typeof AntdAccordion;
  accordion2: typeof AntdAccordion;
  feedbacks: typeof AntdAccordion;
  accordion3: typeof AntdAccordion;
  accordion4: typeof AntdAccordion;
  apiRequestForNotificationSetting: typeof ApiRequest;
  customerfeatures: typeof ApiRequest;
  auth: typeof ApiRequest;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPricing__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPricing__VariantsArgs;
    args?: PlasmicPricing__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPricing__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPricing__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPricing__ArgProps,
          internalVariantPropNames: PlasmicPricing__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPricing__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing";
  } else {
    func.displayName = `PlasmicPricing.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing = Object.assign(
  // Top-level PlasmicPricing renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    getNelsonFeatures: makeNodeComponent("getNelsonFeatures"),
    outlineVertical: makeNodeComponent("outlineVertical"),
    titleVertical: makeNodeComponent("titleVertical"),
    h2: makeNodeComponent("h2"),
    kindOfPrice: makeNodeComponent("kindOfPrice"),
    silverVertical: makeNodeComponent("silverVertical"),
    checkbox2: makeNodeComponent("checkbox2"),
    subjectSilver: makeNodeComponent("subjectSilver"),
    checkboxSilver: makeNodeComponent("checkboxSilver"),
    priceSilver: makeNodeComponent("priceSilver"),
    button: makeNodeComponent("button"),
    description: makeNodeComponent("description"),
    accordion: makeNodeComponent("accordion"),
    accordion2: makeNodeComponent("accordion2"),
    feedbacks: makeNodeComponent("feedbacks"),
    accordion3: makeNodeComponent("accordion3"),
    accordion4: makeNodeComponent("accordion4"),
    apiRequestForNotificationSetting: makeNodeComponent(
      "apiRequestForNotificationSetting"
    ),
    customerfeatures: makeNodeComponent("customerfeatures"),
    auth: makeNodeComponent("auth"),

    // Metadata about props expected for PlasmicPricing
    internalVariantProps: PlasmicPricing__VariantProps,
    internalArgProps: PlasmicPricing__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPricing;
/* prettier-ignore-end */
