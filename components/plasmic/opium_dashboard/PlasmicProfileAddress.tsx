/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9g1e5LLLDS4TGJiaFCSEyH
// Component: x5b7hK4cfrsH

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: Gl72hv5IMo-p/codeComponent
import { Select } from "@/fragment/components/select"; // plasmic-import: n8ioKZzFQxrO/codeComponent
import { Input } from "@/fragment/components/input"; // plasmic-import: ByhbQ0nAxig8/codeComponent
import ProfileTells from "../../ProfileTells"; // plasmic-import: yzo0JdTgs2uD/component
import { FileInput } from "@/fragment/components/file-input"; // plasmic-import: FbJKJDT4Zqs9/codeComponent
import Checkbox from "../../Checkbox"; // plasmic-import: IDR0sAqN5tth/component
import { Map } from "@/fragment/components/map"; // plasmic-import: Hj9PnfcAA6rQ/codeComponent
import Button from "../../Button"; // plasmic-import: oVzoHzMf1TLl/component
import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";
import Dialog from "../../Dialog"; // plasmic-import: FJiI2-N1is_F/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 9g1e5LLLDS4TGJiaFCSEyH/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 9g1e5LLLDS4TGJiaFCSEyH/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 9g1e5LLLDS4TGJiaFCSEyH/projectcss
import sty from "./PlasmicProfileAddress.module.css"; // plasmic-import: x5b7hK4cfrsH/css

import Icon34Icon from "./icons/PlasmicIcon__Icon34"; // plasmic-import: Pu6FdA6kdBUA/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: BN2FHeznHhq_/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: q8mRvXMvOrv9/icon
import Icon40Icon from "./icons/PlasmicIcon__Icon40"; // plasmic-import: iY3SyaL2upTw/icon
import ChevronRightIcon from "../fragment_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import ChevronLeftIcon from "../fragment_icons/icons/PlasmicIcon__ChevronLeft"; // plasmic-import: r9Upp9NbiZkf/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: z62U0rB8gsLE/icon

createPlasmicElementProxy;

export type PlasmicProfileAddress__VariantMembers = {};
export type PlasmicProfileAddress__VariantsArgs = {};
type VariantPropType = keyof PlasmicProfileAddress__VariantsArgs;
export const PlasmicProfileAddress__VariantProps = new Array<VariantPropType>();

export type PlasmicProfileAddress__ArgsType = {};
type ArgPropType = keyof PlasmicProfileAddress__ArgsType;
export const PlasmicProfileAddress__ArgProps = new Array<ArgPropType>();

export type PlasmicProfileAddress__OverridesType = {
  root?: Flex__<"div">;
  centersApi?: Flex__<typeof ApiRequest>;
  provinceSelect?: Flex__<typeof Select>;
  citySelect?: Flex__<typeof Select>;
  address?: Flex__<typeof Input>;
  profileTells?: Flex__<typeof ProfileTells>;
  input3?: Flex__<typeof Input>;
  galleryApi?: Flex__<typeof ApiRequest>;
  fragmentFileInput?: Flex__<typeof FileInput>;
  checkbox?: Flex__<typeof Checkbox>;
  checkbox2?: Flex__<typeof Checkbox>;
  checkbox3?: Flex__<typeof Checkbox>;
  checkbox4?: Flex__<typeof Checkbox>;
  map?: Flex__<typeof Map>;
  sideEffect?: Flex__<typeof SideEffect>;
  imageDialog?: Flex__<typeof Dialog>;
  deleteImageDialog?: Flex__<typeof Dialog>;
};

export interface DefaultProfileAddressProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicProfileAddress__RenderFunc(props: {
  variants: PlasmicProfileAddress__VariantsArgs;
  args: PlasmicProfileAddress__ArgsType;
  overrides: PlasmicProfileAddress__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "province",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            id: "1",
            name: "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            lat: 37.9035733,
            lon: 46.2682109
          },
          {
            id: "2",
            name: "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            lat: 37.4550062,
            lon: 45
          },
          {
            id: "3",
            name: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            lat: 38.4853276,
            lon: 47.8911209
          },
          {
            id: "4",
            name: "\u0627\u0635\u0641\u0647\u0627\u0646",
            lat: 32.6546275,
            lon: 51.6679826
          },
          {
            id: "5",
            name: "\u0627\u0644\u0628\u0631\u0632",
            lat: 35.9960467,
            lon: 50.9289246
          },
          {
            id: "6",
            name: "\u0627\u06cc\u0644\u0627\u0645",
            lat: 33.2957618,
            lon: 46.670534
          },
          {
            id: "7",
            name: "\u0628\u0648\u0634\u0647\u0631",
            lat: 28.9233837,
            lon: 50.820314
          },
          {
            id: "8",
            name: "\u062a\u0647\u0631\u0627\u0646",
            lat: 35.696111,
            lon: 51.423056
          },
          {
            id: "9",
            name: "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            lat: 31.9614348,
            lon: 50.8456323
          },
          {
            id: "10",
            name: "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            lat: 32.5175643,
            lon: 59.1041758
          },
          {
            id: "11",
            name: "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            lat: 35.1020253,
            lon: 59.1041758
          },
          {
            id: "12",
            name: "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            lat: 37.4710353,
            lon: 57.1013188
          },
          {
            id: "13",
            name: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            lat: 31.4360149,
            lon: 49.041312
          },
          {
            id: "14",
            name: "\u0632\u0646\u062c\u0627\u0646",
            lat: 36.5018185,
            lon: 48.3988186
          },
          {
            id: "15",
            name: "\u0633\u0645\u0646\u0627\u0646",
            lat: 35.2255585,
            lon: 54.4342138
          },
          {
            id: "16",
            name: "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            lat: 27.5299906,
            lon: 60.5820676
          },
          {
            id: "17",
            name: "\u0641\u0627\u0631\u0633",
            lat: 29.1043813,
            lon: 53.045893
          },
          {
            id: "18",
            name: "\u0642\u0632\u0648\u06cc\u0646",
            lat: 36.0881317,
            lon: 49.8547266
          },
          { id: "19", name: "\u0642\u0645", lat: 34.6399443, lon: 50.8759419 },
          {
            id: "20",
            name: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            lat: 35.9553579,
            lon: 47.1362125
          },
          {
            id: "21",
            name: "\u06a9\u0631\u0645\u0627\u0646",
            lat: 30.2839379,
            lon: 57.0833628
          },
          {
            id: "22",
            name: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            lat: 34.314167,
            lon: 47.065
          },
          {
            id: "23",
            name: "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            lat: 30.6509479,
            lon: 51.60525
          },
          {
            id: "24",
            name: "\u06af\u0644\u0633\u062a\u0627\u0646",
            lat: 37.2898123,
            lon: 55.1375834
          },
          {
            id: "25",
            name: "\u06af\u06cc\u0644\u0627\u0646",
            lat: 37.1171617,
            lon: 49.5279996
          },
          {
            id: "26",
            name: "\u0644\u0631\u0633\u062a\u0627\u0646",
            lat: 33.5818394,
            lon: 48.3988186
          },
          {
            id: "27",
            name: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            lat: 36.2262393,
            lon: 52.5318604
          },
          {
            id: "28",
            name: "\u0645\u0631\u06a9\u0632\u06cc",
            lat: 33.5093294,
            lon: -92.396119
          },
          {
            id: "29",
            name: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            lat: 27.138723,
            lon: 55.1375834
          },
          {
            id: "30",
            name: "\u0647\u0645\u062f\u0627\u0646",
            lat: 34.7607999,
            lon: 48.3988186
          },
          {
            id: "31",
            name: "\u06cc\u0632\u062f",
            lat: 32.1006387,
            lon: 54.4342138
          }
        ]
      },
      {
        path: "cities",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            id: "1",
            name: "\u062a\u0628\u0631\u06cc\u0632",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.066667,
            lon: 46.3
          },
          {
            id: "2",
            name: "\u06a9\u0646\u062f\u0648\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "3",
            name: "\u0628\u0646\u062f\u0631 \u0634\u0631\u0641\u062e\u0627\u0646\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "4",
            name: "\u0645\u0631\u0627\u063a\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.389167,
            lon: 46.2375
          },
          {
            id: "5",
            name: "\u0645\u06cc\u0627\u0646\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.421111,
            lon: 47.715
          },
          {
            id: "6",
            name: "\u0634\u0628\u0633\u062a\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.180278,
            lon: 45.702778
          },
          {
            id: "7",
            name: "\u0645\u0631\u0646\u062f",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.425117,
            lon: 45.769636
          },
          {
            id: "8",
            name: "\u062c\u0644\u0641\u0627",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.940278,
            lon: 45.630833
          },
          {
            id: "9",
            name: "\u0633\u0631\u0627\u0628",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.940833,
            lon: 47.536667
          },
          {
            id: "10",
            name: "\u0647\u0627\u062f\u06cc\u0634\u0647\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "11",
            name: "\u0628\u0646\u0627\u0628",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.340278,
            lon: 46.056111
          },
          {
            id: "12",
            name: "\u06a9\u0644\u06cc\u0628\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.869444,
            lon: 47.035556
          },
          {
            id: "13",
            name: "\u062a\u0633\u0648\u062c",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "14",
            name: "\u0627\u0647\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.4894305,
            lon: 47.0683575
          },
          {
            id: "15",
            name: "\u0647\u0631\u06cc\u0633",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 29.7751825,
            lon: -95.3102505
          },
          {
            id: "16",
            name: "\u0639\u062c\u0628\u0634\u06cc\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.4775,
            lon: 45.894167
          },
          {
            id: "17",
            name: "\u0647\u0634\u062a\u0631\u0648\u062f",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.477778,
            lon: 47.050833
          },
          {
            id: "18",
            name: "\u0645\u0644\u06a9\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.145625,
            lon: 46.1685242
          },
          {
            id: "19",
            name: "\u0628\u0633\u062a\u0627\u0646 \u0622\u0628\u0627\u062f",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.85,
            lon: 46.833333
          },
          {
            id: "20",
            name: "\u0648\u0631\u0632\u0642\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 38.509722,
            lon: 46.654444
          },
          {
            id: "21",
            name: "\u0627\u0633\u06a9\u0648",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.915833,
            lon: 46.123611
          },
          {
            id: "22",
            name: "\u0622\u0630\u0631 \u0634\u0647\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: 37.758889,
            lon: 45.978333
          },
          {
            id: "23",
            name: "\u0642\u0631\u0647 \u0622\u063a\u0627\u062c",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "24",
            name: "\u0645\u0645\u0642\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "25",
            name: "\u0635\u0648\u0641\u06cc\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "26",
            name: "\u0627\u06cc\u0644\u062e\u0686\u06cc",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "27",
            name: "\u062e\u0633\u0631\u0648\u0634\u0647\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "28",
            name: "\u0628\u0627\u0633\u0645\u0646\u062c",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "29",
            name: "\u0633\u0647\u0646\u062f",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc",
            province_id: "1",
            lat: null,
            lon: null
          },
          {
            id: "30",
            name: "\u0627\u0631\u0648\u0645\u06cc\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 37.555278,
            lon: 45.0725
          },
          {
            id: "31",
            name: "\u0646\u0642\u062f\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.955278,
            lon: 45.388056
          },
          {
            id: "32",
            name: "\u0645\u0627\u06a9\u0648",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 39.295278,
            lon: 44.516667
          },
          {
            id: "33",
            name: "\u062a\u06a9\u0627\u0628",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.400833,
            lon: 47.113333
          },
          {
            id: "34",
            name: "\u062e\u0648\u06cc",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 38.550278,
            lon: 44.952222
          },
          {
            id: "35",
            name: "\u0645\u0647\u0627\u0628\u0627\u062f",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.763056,
            lon: 45.722222
          },
          {
            id: "36",
            name: "\u0633\u0631 \u062f\u0634\u062a",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.155278,
            lon: 45.478889
          },
          {
            id: "37",
            name: "\u0686\u0627\u0644\u062f\u0631\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 39.0649837,
            lon: 44.3844679
          },
          {
            id: "38",
            name: "\u0628\u0648\u06a9\u0627\u0646",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.521111,
            lon: 46.208889
          },
          {
            id: "39",
            name: "\u0645\u06cc\u0627\u0646\u062f\u0648\u0622\u0628",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.969444,
            lon: 46.102778
          },
          {
            id: "40",
            name: "\u0633\u0644\u0645\u0627\u0633",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 38.197222,
            lon: 44.765278
          },
          {
            id: "41",
            name: "\u0634\u0627\u0647\u06cc\u0646 \u062f\u0698",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.679167,
            lon: 46.566944
          },
          {
            id: "42",
            name: "\u067e\u06cc\u0631\u0627\u0646\u0634\u0647\u0631",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 36.694444,
            lon: 45.141667
          },
          {
            id: "43",
            name: "\u0633\u06cc\u0647 \u0686\u0634\u0645\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: null,
            lon: null
          },
          {
            id: "44",
            name: "\u0627\u0634\u0646\u0648\u06cc\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: 37.039722,
            lon: 45.098333
          },
          {
            id: "45",
            name: "\u0686\u0627\u06cc\u067e\u0627\u0631\u0647",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: null,
            lon: null
          },
          {
            id: "46",
            name: "\u067e\u0644\u062f\u0634\u062a",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: null,
            lon: null
          },
          {
            id: "47",
            name: "\u0634\u0648\u0637",
            province:
              "\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc",
            province_id: "2",
            lat: null,
            lon: null
          },
          {
            id: "48",
            name: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 38.4853276,
            lon: 47.8911209
          },
          {
            id: "49",
            name: "\u0633\u0631\u0639\u06cc\u0646",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: null,
            lon: null
          },
          {
            id: "50",
            name: "\u0628\u06cc\u0644\u0647 \u0633\u0648\u0627\u0631",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 39.3567775,
            lon: 47.9490765
          },
          {
            id: "51",
            name: "\u067e\u0627\u0631\u0633 \u0622\u0628\u0627\u062f",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 39.648333,
            lon: 47.9175
          },
          {
            id: "52",
            name: "\u062e\u0644\u062e\u0627\u0644",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 37.618889,
            lon: 48.525833
          },
          {
            id: "53",
            name: "\u0645\u0634\u06af\u06cc\u0646 \u0634\u0647\u0631",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: null,
            lon: null
          },
          {
            id: "54",
            name: "\u0645\u063a\u0627\u0646",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: null,
            lon: null
          },
          {
            id: "55",
            name: "\u0646\u0645\u06cc\u0646",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 38.426944,
            lon: 48.483889
          },
          {
            id: "56",
            name: "\u0646\u06cc\u0631",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 38.034722,
            lon: 47.998611
          },
          {
            id: "57",
            name: "\u06a9\u0648\u062b\u0631",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 31.8676866,
            lon: 54.3379802
          },
          {
            id: "58",
            name: "\u06a9\u06cc\u0648\u06cc",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: null,
            lon: null
          },
          {
            id: "59",
            name: "\u06af\u0631\u0645\u06cc",
            province: "\u0627\u0631\u062f\u0628\u06cc\u0644",
            province_id: "3",
            lat: 39.0372267,
            lon: 47.9277021
          },
          {
            id: "60",
            name: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.6546275,
            lon: 51.6679826
          },
          {
            id: "61",
            name: "\u0641\u0631\u06cc\u062f\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.0214829,
            lon: 50.3069088
          },
          {
            id: "62",
            name: "\u0641\u0631\u06cc\u062f\u0648\u0646 \u0634\u0647\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.941111,
            lon: 50.121111
          },
          {
            id: "63",
            name: "\u0641\u0644\u0627\u0648\u0631\u062c\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.555278,
            lon: 51.509722
          },
          {
            id: "64",
            name: "\u06af\u0644\u067e\u0627\u06cc\u06af\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.453611,
            lon: 50.288333
          },
          {
            id: "65",
            name: "\u062f\u0647\u0627\u0642\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 31.94,
            lon: 51.647778
          },
          {
            id: "66",
            name: "\u0646\u0637\u0646\u0632",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.513333,
            lon: 51.916389
          },
          {
            id: "67",
            name: "\u0646\u0627\u06cc\u06cc\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "68",
            name: "\u062a\u06cc\u0631\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "69",
            name: "\u06a9\u0627\u0634\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.9850358,
            lon: 51.4099625
          },
          {
            id: "70",
            name: "\u0641\u0648\u0644\u0627\u062f \u0634\u0647\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "71",
            name: "\u0627\u0631\u062f\u0633\u062a\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.376111,
            lon: 52.369444
          },
          {
            id: "72",
            name: "\u0633\u0645\u06cc\u0631\u0645",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 31.3988346,
            lon: 51.567593
          },
          {
            id: "73",
            name: "\u062f\u0631\u0686\u0647",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "74",
            name: "\u06a9\u0648\u0647\u067e\u0627\u06cc\u0647",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "75",
            name: "\u0645\u0628\u0627\u0631\u06a9\u0647",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.346389,
            lon: 51.504444
          },
          {
            id: "76",
            name: "\u0634\u0647\u0631\u0636\u0627",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "77",
            name: "\u062e\u0645\u06cc\u0646\u06cc \u0634\u0647\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.700278,
            lon: 51.521111
          },
          {
            id: "78",
            name: "\u0634\u0627\u0647\u06cc\u0646 \u0634\u0647\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "79",
            name: "\u0646\u062c\u0641 \u0622\u0628\u0627\u062f",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.6324231,
            lon: 51.3679914
          },
          {
            id: "80",
            name: "\u062f\u0648\u0644\u062a \u0622\u0628\u0627\u062f",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "81",
            name: "\u0632\u0631\u06cc\u0646 \u0634\u0647\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "82",
            name: "\u0622\u0631\u0627\u0646 \u0648 \u0628\u06cc\u062f\u06af\u0644",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 34.057778,
            lon: 51.484167
          },
          {
            id: "83",
            name: "\u0628\u0627\u063a \u0628\u0647\u0627\u062f\u0631\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "84",
            name: "\u062e\u0648\u0627\u0646\u0633\u0627\u0631",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 33.220556,
            lon: 50.315
          },
          {
            id: "85",
            name: "\u0645\u0647\u0631\u062f\u0634\u062a",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "86",
            name: "\u0639\u0644\u0648\u06cc\u062c\u0647",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "87",
            name: "\u0639\u0633\u06af\u0631\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "88",
            name: "\u0646\u0647\u0636\u062a \u0622\u0628\u0627\u062f",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "89",
            name: "\u062d\u0627\u062c\u06cc \u0622\u0628\u0627\u062f",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 28.309167,
            lon: 55.901667
          },
          {
            id: "90",
            name: "\u062a\u0648\u062f\u0634\u06a9",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "91",
            name: "\u0648\u0631\u0632\u0646\u0647",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: null,
            lon: null
          },
          {
            id: "449",
            name: "\u0686\u0627\u062f\u06af\u0627\u0646",
            province: "\u0627\u0635\u0641\u0647\u0627\u0646",
            province_id: "4",
            lat: 32.768333,
            lon: 50.628611
          },
          {
            id: "275",
            name: "\u0637\u0627\u0644\u0642\u0627\u0646",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: 33.2729171,
            lon: 52.1985314
          },
          {
            id: "276",
            name: "\u0646\u0638\u0631\u0622\u0628\u0627\u062f",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: 35.952222,
            lon: 50.6075
          },
          {
            id: "277",
            name: "\u0627\u0634\u062a\u0647\u0627\u0631\u062f",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "278",
            name: "\u0647\u0634\u062a\u06af\u0631\u062f",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "279",
            name: "\u06a9\u0646",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "280",
            name: "\u0622\u0633\u0627\u0631\u0627",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "281",
            name: "\u0634\u0647\u0631\u06a9 \u06af\u0644\u0633\u062a\u0627\u0646",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "282",
            name: "\u0627\u0646\u062f\u06cc\u0634\u0647",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "283",
            name: "\u06a9\u0631\u062c",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: 35.8400188,
            lon: 50.9390906
          },
          {
            id: "285",
            name: "\u06af\u0648\u0647\u0631\u062f\u0634\u062a",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "286",
            name: "\u0645\u0627\u0647\u062f\u0634\u062a",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "287",
            name: "\u0645\u0634\u06a9\u06cc\u0646 \u062f\u0634\u062a",
            province: "\u0627\u0644\u0628\u0631\u0632",
            province_id: "5",
            lat: null,
            lon: null
          },
          {
            id: "92",
            name: "\u0627\u06cc\u0644\u0627\u0645",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 33.2957618,
            lon: 46.670534
          },
          {
            id: "93",
            name: "\u0645\u0647\u0631\u0627\u0646",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 33.122222,
            lon: 46.164722
          },
          {
            id: "94",
            name: "\u062f\u0647\u0644\u0631\u0627\u0646",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 32.694167,
            lon: 47.267778
          },
          {
            id: "95",
            name: "\u0622\u0628\u062f\u0627\u0646\u0627\u0646",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 32.9925,
            lon: 47.419722
          },
          {
            id: "96",
            name: "\u0634\u06cc\u0631\u0648\u0627\u0646 \u0686\u0631\u062f\u0627\u0648\u0644",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: null,
            lon: null
          },
          {
            id: "97",
            name: "\u062f\u0631\u0647 \u0634\u0647\u0631",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 33.139722,
            lon: 47.376111
          },
          {
            id: "98",
            name: "\u0627\u06cc\u0648\u0627\u0646",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: 33.827222,
            lon: 46.309722
          },
          {
            id: "99",
            name: "\u0633\u0631\u0627\u0628\u0644\u0647",
            province: "\u0627\u06cc\u0644\u0627\u0645",
            province_id: "6",
            lat: null,
            lon: null
          },
          {
            id: "100",
            name: "\u0628\u0648\u0634\u0647\u0631",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 28.9233837,
            lon: 50.820314
          },
          {
            id: "101",
            name: "\u062a\u0646\u06af\u0633\u062a\u0627\u0646",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 28.9837547,
            lon: 50.8330708
          },
          {
            id: "102",
            name: "\u062f\u0634\u062a\u0633\u062a\u0627\u0646",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 29.266667,
            lon: 51.216667
          },
          {
            id: "103",
            name: "\u062f\u06cc\u0631",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 27.84,
            lon: 51.937778
          },
          {
            id: "104",
            name: "\u062f\u06cc\u0644\u0645",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 30.1182632,
            lon: 50.2261227
          },
          {
            id: "105",
            name: "\u06a9\u0646\u06af\u0627\u0646",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 27.8370437,
            lon: 52.0645473
          },
          {
            id: "106",
            name: "\u06af\u0646\u0627\u0648\u0647",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 29.579167,
            lon: 50.516944
          },
          {
            id: "107",
            name: "\u0631\u06cc\u0634\u0647\u0631",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "108",
            name: "\u062f\u0634\u062a\u06cc",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 35.7845145,
            lon: 51.4347961
          },
          {
            id: "109",
            name: "\u062e\u0648\u0631\u0645\u0648\u062c",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "110",
            name: "\u0627\u0647\u0631\u0645",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "111",
            name: "\u0628\u0631\u0627\u0632\u062c\u0627\u0646",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "112",
            name: "\u062e\u0627\u0631\u06a9",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "113",
            name: "\u062c\u0645",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: 27.827778,
            lon: 52.326944
          },
          {
            id: "114",
            name: "\u06a9\u0627\u06a9\u06cc",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "115",
            name: "\u0639\u0633\u0644\u0648\u06cc\u0647",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "116",
            name: "\u0628\u0631\u062f\u062e\u0648\u0646",
            province: "\u0628\u0648\u0634\u0647\u0631",
            province_id: "7",
            lat: null,
            lon: null
          },
          {
            id: "117",
            name: "\u062a\u0647\u0631\u0627\u0646",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.696111,
            lon: 51.423056
          },
          {
            id: "118",
            name: "\u0648\u0631\u0627\u0645\u06cc\u0646",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.3252407,
            lon: 51.6471987
          },
          {
            id: "119",
            name: "\u0641\u06cc\u0631\u0648\u0632\u06a9\u0648\u0647",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.438671,
            lon: 60.809387
          },
          {
            id: "120",
            name: "\u0631\u06cc",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 48.3444663,
            lon: -103.1651845
          },
          {
            id: "121",
            name: "\u062f\u0645\u0627\u0648\u0646\u062f",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.9467494,
            lon: 52.1275481
          },
          {
            id: "122",
            name: "\u0627\u0633\u0644\u0627\u0645\u0634\u0647\u0631",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.5445805,
            lon: 51.2302457
          },
          {
            id: "123",
            name: "\u0631\u0648\u062f\u0647\u0646",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "124",
            name: "\u0644\u0648\u0627\u0633\u0627\u0646",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "125",
            name: "\u0628\u0648\u0645\u0647\u0646",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "126",
            name: "\u062a\u062c\u0631\u06cc\u0634",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "127",
            name: "\u0641\u0634\u0645",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "128",
            name: "\u06a9\u0647\u0631\u06cc\u0632\u06a9",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "129",
            name: "\u067e\u0627\u06a9\u062f\u0634\u062a",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.4668913,
            lon: 51.6860625
          },
          {
            id: "130",
            name: "\u0686\u0647\u0627\u0631\u062f\u0627\u0646\u06af\u0647",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "131",
            name: "\u0634\u0631\u06cc\u0641 \u0622\u0628\u0627\u062f",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "132",
            name: "\u0642\u0631\u0686\u06a9",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "133",
            name: "\u0628\u0627\u0642\u0631\u0634\u0647\u0631",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "134",
            name: "\u0634\u0647\u0631\u06cc\u0627\u0631",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.659722,
            lon: 51.059167
          },
          {
            id: "135",
            name: "\u0631\u0628\u0627\u0637 \u06a9\u0631\u06cc\u0645",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: 35.484722,
            lon: 51.082778
          },
          {
            id: "136",
            name: "\u0642\u062f\u0633",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "137",
            name: "\u0645\u0644\u0627\u0631\u062f",
            province: "\u062a\u0647\u0631\u0627\u0646",
            province_id: "8",
            lat: null,
            lon: null
          },
          {
            id: "138",
            name: "\u0634\u0647\u0631\u06a9\u0631\u062f",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: 32.325556,
            lon: 50.864444
          },
          {
            id: "139",
            name: "\u0641\u0627\u0631\u0633\u0627\u0646",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: 32.2582066,
            lon: 50.5705088
          },
          {
            id: "140",
            name: "\u0628\u0631\u0648\u062c\u0646",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: 31.965278,
            lon: 51.287222
          },
          {
            id: "141",
            name: "\u0686\u0644\u06af\u0631\u062f",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: null,
            lon: null
          },
          {
            id: "142",
            name: "\u0627\u0631\u062f\u0644",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: 31.999722,
            lon: 50.661667
          },
          {
            id: "143",
            name: "\u0644\u0631\u062f\u06af\u0627\u0646",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: 31.510278,
            lon: 50.829444
          },
          {
            id: "144",
            name: "\u0633\u0627\u0645\u0627\u0646",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: null,
            lon: null
          },
          {
            id: "443",
            name: "\u06a9\u06cc\u0627\u0631",
            province:
              "\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc",
            province_id: "9",
            lat: null,
            lon: null
          },
          {
            id: "145",
            name: "\u0642\u0627\u0626\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 33.726667,
            lon: 59.184444
          },
          {
            id: "146",
            name: "\u0641\u0631\u062f\u0648\u0633",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 34.018611,
            lon: 58.172222
          },
          {
            id: "147",
            name: "\u0628\u06cc\u0631\u062c\u0646\u062f",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 32.8649039,
            lon: 59.2262472
          },
          {
            id: "148",
            name: "\u0646\u0647\u0628\u0646\u062f\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 31.541944,
            lon: 60.036389
          },
          {
            id: "149",
            name: "\u0633\u0631\u0628\u06cc\u0634\u0647",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 32.575556,
            lon: 59.798333
          },
          {
            id: "150",
            name: "\u0637\u0628\u0633 \u0645\u0633\u06cc\u0646\u0627",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: null,
            lon: null
          },
          {
            id: "151",
            name: "\u0642\u0647\u0633\u062a\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: null,
            lon: null
          },
          {
            id: "152",
            name: "\u062f\u0631\u0645\u06cc\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc",
            province_id: "10",
            lat: 33.0339405,
            lon: 60.1184797
          },
          {
            id: "153",
            name: "\u0645\u0634\u0647\u062f",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.2604623,
            lon: 59.6167549
          },
          {
            id: "154",
            name: "\u0646\u06cc\u0634\u0627\u0628\u0648\u0631",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.2140865,
            lon: 58.7960915
          },
          {
            id: "155",
            name: "\u0633\u0628\u0632\u0648\u0627\u0631",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.2151823,
            lon: 57.6678228
          },
          {
            id: "156",
            name: "\u06a9\u0627\u0634\u0645\u0631",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 35.238333,
            lon: 58.465556
          },
          {
            id: "157",
            name: "\u06af\u0646\u0627\u0628\u0627\u062f",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 34.352778,
            lon: 58.683611
          },
          {
            id: "158",
            name: "\u0637\u0628\u0633",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 33.595833,
            lon: 56.924444
          },
          {
            id: "159",
            name: "\u062a\u0631\u0628\u062a \u062d\u06cc\u062f\u0631\u06cc\u0647",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 35.273889,
            lon: 59.219444
          },
          {
            id: "160",
            name: "\u062e\u0648\u0627\u0641",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 34.576389,
            lon: 60.140833
          },
          {
            id: "161",
            name: "\u062a\u0631\u0628\u062a \u062c\u0627\u0645",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 35.243889,
            lon: 60.6225
          },
          {
            id: "162",
            name: "\u062a\u0627\u06cc\u0628\u0627\u062f",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 34.74,
            lon: 60.775556
          },
          {
            id: "163",
            name: "\u0642\u0648\u0686\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 37.106111,
            lon: 58.509444
          },
          {
            id: "164",
            name: "\u0633\u0631\u062e\u0633",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.545,
            lon: 61.157778
          },
          {
            id: "165",
            name: "\u0628\u0631\u062f\u0633\u06a9\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 35.260833,
            lon: 57.969722
          },
          {
            id: "166",
            name: "\u0641\u0631\u06cc\u0645\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 35.706944,
            lon: 59.85
          },
          {
            id: "167",
            name: "\u0686\u0646\u0627\u0631\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.645556,
            lon: 59.121111
          },
          {
            id: "168",
            name: "\u062f\u0631\u06af\u0632",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 37.444444,
            lon: 59.108056
          },
          {
            id: "169",
            name: "\u06a9\u0644\u0627\u062a",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 34.198333,
            lon: 58.544444
          },
          {
            id: "170",
            name: "\u0637\u0631\u0642\u0628\u0647",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: null,
            lon: null
          },
          {
            id: "171",
            name: "\u0633\u0631 \u0648\u0644\u0627\u06cc\u062a",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: null,
            lon: null
          },
          {
            id: "441",
            name: "\u0628\u062c\u0633\u062a\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 34.516389,
            lon: 58.184444
          },
          {
            id: "172",
            name: "\u0628\u062c\u0646\u0648\u0631\u062f",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: 37.475,
            lon: 57.333333
          },
          {
            id: "173",
            name: "\u0627\u0633\u0641\u0631\u0627\u06cc\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: 37.076389,
            lon: 57.51
          },
          {
            id: "174",
            name: "\u062c\u0627\u062c\u0631\u0645",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: 36.95,
            lon: 56.38
          },
          {
            id: "175",
            name: "\u0634\u06cc\u0631\u0648\u0627\u0646",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: 37.4092357,
            lon: 57.9276184
          },
          {
            id: "176",
            name: "\u0622\u0634\u062e\u0627\u0646\u0647",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: null,
            lon: null
          },
          {
            id: "177",
            name: "\u06af\u0631\u0645\u0647",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: null,
            lon: null
          },
          {
            id: "178",
            name: "\u0633\u0627\u0631\u0648\u062c",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc",
            province_id: "12",
            lat: null,
            lon: null
          },
          {
            id: "179",
            name: "\u0627\u0647\u0648\u0627\u0632",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 31.3183272,
            lon: 48.6706187
          },
          {
            id: "180",
            name: "\u0627\u06cc\u0631\u0627\u0646\u0634\u0647\u0631",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 27.2025,
            lon: 60.684722
          },
          {
            id: "181",
            name: "\u0634\u0648\u0634",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.194167,
            lon: 48.243611
          },
          {
            id: "182",
            name: "\u0622\u0628\u0627\u062f\u0627\u0646",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.347296,
            lon: 48.2934004
          },
          {
            id: "183",
            name: "\u062e\u0631\u0645\u0634\u0647\u0631",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.4256219,
            lon: 48.1891185
          },
          {
            id: "184",
            name: "\u0645\u0633\u062c\u062f \u0633\u0644\u06cc\u0645\u0627\u0646",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 31.936389,
            lon: 49.303889
          },
          {
            id: "185",
            name: "\u0627\u06cc\u0630\u0647",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 31.834167,
            lon: 49.867222
          },
          {
            id: "186",
            name: "\u0634\u0648\u0634\u062a\u0631",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.045556,
            lon: 48.856667
          },
          {
            id: "187",
            name: "\u0627\u0646\u062f\u06cc\u0645\u0634\u06a9",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.46,
            lon: 48.359167
          },
          {
            id: "188",
            name: "\u0633\u0648\u0633\u0646\u06af\u0631\u062f",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "189",
            name: "\u0647\u0648\u06cc\u0632\u0647",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "190",
            name: "\u062f\u0632\u0641\u0648\u0644",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.3830777,
            lon: 48.4235841
          },
          {
            id: "191",
            name: "\u0634\u0627\u062f\u06af\u0627\u0646",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.649722,
            lon: 48.664722
          },
          {
            id: "192",
            name: "\u0628\u0646\u062f\u0631 \u0645\u0627\u0647\u0634\u0647\u0631",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.558889,
            lon: 49.198056
          },
          {
            id: "193",
            name: "\u0628\u0646\u062f\u0631 \u0627\u0645\u0627\u0645 \u062e\u0645\u06cc\u0646\u06cc",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "194",
            name: "\u0627\u0645\u06cc\u062f\u06cc\u0647",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.745833,
            lon: 49.708611
          },
          {
            id: "195",
            name: "\u0628\u0647\u0628\u0647\u0627\u0646",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.595833,
            lon: 50.241667
          },
          {
            id: "196",
            name: "\u0631\u0627\u0645\u0647\u0631\u0645\u0632",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 31.28,
            lon: 49.603611
          },
          {
            id: "197",
            name: "\u0628\u0627\u063a \u0645\u0644\u06a9",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.3947206,
            lon: 51.5965328
          },
          {
            id: "198",
            name: "\u0647\u0646\u062f\u06cc\u062c\u0627\u0646",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.236389,
            lon: 49.711944
          },
          {
            id: "199",
            name: "\u0644\u0627\u0644\u06cc",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 32.328889,
            lon: 49.093611
          },
          {
            id: "200",
            name: "\u0631\u0627\u0645\u0634\u06cc\u0631",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: 30.8956521,
            lon: 49.4094701
          },
          {
            id: "201",
            name: "\u062d\u0645\u06cc\u062f\u06cc\u0647",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "202",
            name: "\u062f\u063a\u0627\u063a\u0644\u0647",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "203",
            name: "\u0645\u0644\u0627\u062b\u0627\u0646\u06cc",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "205",
            name: "\u0648\u06cc\u0633\u06cc",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "445",
            name: "\u0622\u063a\u0627\u062c\u0627\u0631\u06cc",
            province: "\u062e\u0648\u0632\u0633\u062a\u0627\u0646",
            province_id: "13",
            lat: null,
            lon: null
          },
          {
            id: "206",
            name: "\u0632\u0646\u062c\u0627\u0646",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.5018185,
            lon: 48.3988186
          },
          {
            id: "207",
            name: "\u0627\u0628\u0647\u0631",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.146667,
            lon: 49.218056
          },
          {
            id: "208",
            name: "\u062e\u062f\u0627\u0628\u0646\u062f\u0647",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.114722,
            lon: 48.591111
          },
          {
            id: "209",
            name: "\u0637\u0627\u0631\u0645",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 28.1804287,
            lon: 55.7453367
          },
          {
            id: "210",
            name: "\u0645\u0627\u0647\u0646\u0634\u0627\u0646",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.744444,
            lon: 47.6725
          },
          {
            id: "211",
            name: "\u062e\u0631\u0645\u062f\u0631\u0647",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.203056,
            lon: 49.186944
          },
          {
            id: "212",
            name: "\u0627\u06cc\u062c\u0631\u0648\u062f",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: 36.4160928,
            lon: 48.2469249
          },
          {
            id: "213",
            name: "\u0632\u0631\u06cc\u0646 \u0622\u0628\u0627\u062f",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: null,
            lon: null
          },
          {
            id: "214",
            name: "\u0622\u0628 \u0628\u0631",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: null,
            lon: null
          },
          {
            id: "215",
            name: "\u0642\u06cc\u062f\u0627\u0631",
            province: "\u0632\u0646\u062c\u0627\u0646",
            province_id: "14",
            lat: null,
            lon: null
          },
          {
            id: "216",
            name: "\u0633\u0645\u0646\u0627\u0646",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: 35.2255585,
            lon: 54.4342138
          },
          {
            id: "217",
            name: "\u0634\u0627\u0647\u0631\u0648\u062f",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: 36.418056,
            lon: 54.976389
          },
          {
            id: "218",
            name: "\u06af\u0631\u0645\u0633\u0627\u0631",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: 35.218333,
            lon: 52.340833
          },
          {
            id: "219",
            name: "\u0627\u06cc\u0648\u0627\u0646\u06a9\u06cc",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: null,
            lon: null
          },
          {
            id: "220",
            name: "\u062f\u0627\u0645\u063a\u0627\u0646",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: 36.168333,
            lon: 54.348056
          },
          {
            id: "221",
            name: "\u0628\u0633\u0637\u0627\u0645",
            province: "\u0633\u0645\u0646\u0627\u0646",
            province_id: "15",
            lat: null,
            lon: null
          },
          {
            id: "222",
            name: "\u0632\u0627\u0647\u062f\u0627\u0646",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 29.496389,
            lon: 60.862778
          },
          {
            id: "223",
            name: "\u0686\u0627\u0628\u0647\u0627\u0631",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 25.291944,
            lon: 60.643056
          },
          {
            id: "224",
            name: "\u062e\u0627\u0634",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 28.216667,
            lon: 61.2
          },
          {
            id: "225",
            name: "\u0633\u0631\u0627\u0648\u0627\u0646",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 27.370833,
            lon: 62.334167
          },
          {
            id: "226",
            name: "\u0632\u0627\u0628\u0644",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 31.028611,
            lon: 61.501111
          },
          {
            id: "227",
            name: "\u0633\u0631\u0628\u0627\u0632",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 26.630833,
            lon: 61.256389
          },
          {
            id: "228",
            name: "\u0646\u06cc\u06a9\u0634\u0647\u0631",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 26.4184719,
            lon: 60.2110752
          },
          {
            id: "229",
            name: "\u0627\u06cc\u0631\u0627\u0646\u0634\u0647\u0631",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: 27.2025,
            lon: 60.684722
          },
          {
            id: "230",
            name: "\u0631\u0627\u0633\u06a9",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: null,
            lon: null
          },
          {
            id: "231",
            name: "\u0645\u06cc\u0631\u062c\u0627\u0648\u0647",
            province:
              "\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646",
            province_id: "16",
            lat: null,
            lon: null
          },
          {
            id: "232",
            name: "\u0634\u06cc\u0631\u0627\u0632",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.5917677,
            lon: 52.5836982
          },
          {
            id: "233",
            name: "\u0627\u0642\u0644\u06cc\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 30.898889,
            lon: 52.686667
          },
          {
            id: "234",
            name: "\u062f\u0627\u0631\u0627\u0628",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.751944,
            lon: 54.544444
          },
          {
            id: "235",
            name: "\u0641\u0633\u0627",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.938333,
            lon: 53.648333
          },
          {
            id: "236",
            name: "\u0645\u0631\u0648\u062f\u0634\u062a",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.874167,
            lon: 52.8025
          },
          {
            id: "237",
            name: "\u062e\u0631\u0645 \u0628\u06cc\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 32.6708345,
            lon: 51.6470279
          },
          {
            id: "238",
            name: "\u0622\u0628\u0627\u062f\u0647",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 31.160833,
            lon: 52.650556
          },
          {
            id: "239",
            name: "\u06a9\u0627\u0632\u0631\u0648\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.619444,
            lon: 51.654167
          },
          {
            id: "240",
            name: "\u0645\u0645\u0633\u0646\u06cc",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 31.9600345,
            lon: 50.5122652
          },
          {
            id: "241",
            name: "\u0633\u067e\u06cc\u062f\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 30.2425282,
            lon: 51.9924185
          },
          {
            id: "242",
            name: "\u0644\u0627\u0631",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "243",
            name: "\u0641\u06cc\u0631\u0648\u0632 \u0622\u0628\u0627\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.843889,
            lon: 52.570833
          },
          {
            id: "244",
            name: "\u062c\u0647\u0631\u0645",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.5,
            lon: 53.560556
          },
          {
            id: "245",
            name: "\u0646\u06cc \u0631\u06cc\u0632",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.198889,
            lon: 54.327778
          },
          {
            id: "246",
            name: "\u0627\u0633\u062a\u0647\u0628\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.126667,
            lon: 54.042222
          },
          {
            id: "247",
            name: "\u0644\u0627\u0645\u0631\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 27.3423771,
            lon: 53.1803558
          },
          {
            id: "248",
            name: "\u0645\u0647\u0631",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 27.5559931,
            lon: 52.8847205
          },
          {
            id: "249",
            name: "\u062d\u0627\u062c\u06cc \u0622\u0628\u0627\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.309167,
            lon: 55.901667
          },
          {
            id: "250",
            name: "\u0646\u0648\u0631\u0622\u0628\u0627\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 30.114167,
            lon: 51.521667
          },
          {
            id: "251",
            name: "\u0627\u0631\u062f\u06a9\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 32.31,
            lon: 54.0175
          },
          {
            id: "252",
            name: "\u0635\u0641\u0627\u0634\u0647\u0631",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "253",
            name: "\u0627\u0631\u0633\u0646\u062c\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 29.9125,
            lon: 53.308611
          },
          {
            id: "254",
            name: "\u0642\u06cc\u0631\u0648\u06a9\u0627\u0631\u0632\u06cc\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.42998,
            lon: 53.09516
          },
          {
            id: "255",
            name: "\u0633\u0648\u0631\u06cc\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "256",
            name: "\u0641\u0631\u0627\u0634\u0628\u0646\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 28.871389,
            lon: 52.091667
          },
          {
            id: "257",
            name: "\u0633\u0631\u0648\u0633\u062a\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "258",
            name: "\u0627\u0631\u0698\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "259",
            name: "\u06af\u0648\u06cc\u0645",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "260",
            name: "\u062f\u0627\u0631\u06cc\u0648\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "261",
            name: "\u0632\u0631\u0642\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "262",
            name: "\u062e\u0627\u0646 \u0632\u0646\u06cc\u0627\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "263",
            name: "\u06a9\u0648\u0627\u0631",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "264",
            name: "\u062f\u0647 \u0628\u06cc\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "265",
            name: "\u0628\u0627\u0628 \u0627\u0646\u0627\u0631/\u062e\u0641\u0631",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "266",
            name: "\u0628\u0648\u0627\u0646\u0627\u062a",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 30.4855907,
            lon: 53.5933304
          },
          {
            id: "267",
            name: "\u062e\u0631\u0627\u0645\u0647",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "268",
            name: "\u062e\u0646\u062c",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 27.891389,
            lon: 53.434444
          },
          {
            id: "269",
            name: "\u0633\u06cc\u0627\u062e \u062f\u0627\u0631\u0646\u06af\u0648\u0646",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "442",
            name: "\u06af\u0631\u0627\u0634",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "447",
            name: "\u067e\u0627\u0633\u0627\u0631\u06af\u0627\u062f",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: 30.2033075,
            lon: 53.17901
          },
          {
            id: "448",
            name: "\u0628\u06cc\u0636\u0627",
            province: "\u0641\u0627\u0631\u0633",
            province_id: "17",
            lat: null,
            lon: null
          },
          {
            id: "270",
            name: "\u0642\u0632\u0648\u06cc\u0646",
            province: "\u0642\u0632\u0648\u06cc\u0646",
            province_id: "18",
            lat: 36.0881317,
            lon: 49.8547266
          },
          {
            id: "271",
            name: "\u062a\u0627\u06a9\u0633\u062a\u0627\u0646",
            province: "\u0642\u0632\u0648\u06cc\u0646",
            province_id: "18",
            lat: 36.069722,
            lon: 49.695833
          },
          {
            id: "272",
            name: "\u0622\u0628\u06cc\u06a9",
            province: "\u0642\u0632\u0648\u06cc\u0646",
            province_id: "18",
            lat: 36.04,
            lon: 50.531111
          },
          {
            id: "273",
            name: "\u0628\u0648\u0626\u06cc\u0646 \u0632\u0647\u0631\u0627",
            province: "\u0642\u0632\u0648\u06cc\u0646",
            province_id: "18",
            lat: 35.766944,
            lon: 50.057778
          },
          {
            id: "274",
            name: "\u0642\u0645",
            province: "\u0642\u0645",
            province_id: "19",
            lat: 34.6399443,
            lon: 50.8759419
          },
          {
            id: "288",
            name: "\u0633\u0646\u0646\u062f\u062c",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 35.3218748,
            lon: 46.9861647
          },
          {
            id: "289",
            name: "\u062f\u06cc\u0648\u0627\u0646\u062f\u0631\u0647",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 35.913889,
            lon: 47.023889
          },
          {
            id: "290",
            name: "\u0628\u0627\u0646\u0647",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 35.9985999,
            lon: 45.8823428
          },
          {
            id: "291",
            name: "\u0628\u06cc\u062c\u0627\u0631",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 32.735278,
            lon: 59.466667
          },
          {
            id: "292",
            name: "\u0633\u0642\u0632",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 36.246389,
            lon: 46.266389
          },
          {
            id: "293",
            name: "\u06a9\u0627\u0645\u06cc\u0627\u0631\u0627\u0646",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 34.795556,
            lon: 46.935556
          },
          {
            id: "294",
            name: "\u0642\u0631\u0648\u0647",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 35.1678934,
            lon: 47.8038272
          },
          {
            id: "295",
            name: "\u0645\u0631\u06cc\u0648\u0627\u0646",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: 35.526944,
            lon: 46.176389
          },
          {
            id: "296",
            name: "\u0635\u0644\u0648\u0627\u062a \u0622\u0628\u0627\u062f",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: null,
            lon: null
          },
          {
            id: "297",
            name: "\u062d\u0633\u0646 \u0622\u0628\u0627\u062f",
            province: "\u06a9\u0631\u062f\u0633\u062a\u0627\u0646",
            province_id: "20",
            lat: null,
            lon: null
          },
          {
            id: "298",
            name: "\u06a9\u0631\u0645\u0627\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 29.4850089,
            lon: 57.6439048
          },
          {
            id: "299",
            name: "\u0631\u0627\u0648\u0631",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 31.265556,
            lon: 56.805556
          },
          {
            id: "300",
            name: "\u0628\u0627\u0628\u06a9",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: null,
            lon: null
          },
          {
            id: "301",
            name: "\u0627\u0646\u0627\u0631",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: null,
            lon: null
          },
          {
            id: "302",
            name: "\u06a9\u0648\u0647\u0628\u0646\u0627\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 31.410278,
            lon: 56.2825
          },
          {
            id: "303",
            name: "\u0631\u0641\u0633\u0646\u062c\u0627\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 30.406667,
            lon: 55.993889
          },
          {
            id: "304",
            name: "\u0628\u0627\u0641\u062a",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 29.233056,
            lon: 56.602222
          },
          {
            id: "305",
            name: "\u0633\u06cc\u0631\u062c\u0627\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 29.4586676,
            lon: 55.6714051
          },
          {
            id: "306",
            name: "\u06a9\u0647\u0646\u0648\u062c",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 27.9467603,
            lon: 57.7062572
          },
          {
            id: "307",
            name: "\u0632\u0631\u0646\u062f",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 30.812778,
            lon: 56.563889
          },
          {
            id: "308",
            name: "\u0628\u0645",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 29.106111,
            lon: 58.356944
          },
          {
            id: "309",
            name: "\u062c\u06cc\u0631\u0641\u062a",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 28.6751124,
            lon: 57.7371569
          },
          {
            id: "310",
            name: "\u0628\u0631\u062f\u0633\u06cc\u0631",
            province: "\u06a9\u0631\u0645\u0627\u0646",
            province_id: "21",
            lat: 29.9275,
            lon: 56.572222
          },
          {
            id: "311",
            name: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.4576233,
            lon: 46.670534
          },
          {
            id: "312",
            name: "\u0627\u0633\u0644\u0627\u0645 \u0622\u0628\u0627\u062f \u063a\u0631\u0628",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 33.7293882,
            lon: 73.0931461
          },
          {
            id: "313",
            name: "\u0633\u0631 \u067e\u0644 \u0630\u0647\u0627\u0628",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.461111,
            lon: 45.862778
          },
          {
            id: "314",
            name: "\u06a9\u0646\u06af\u0627\u0648\u0631",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.504167,
            lon: 47.965278
          },
          {
            id: "315",
            name: "\u0633\u0646\u0642\u0631",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.783611,
            lon: 47.600278
          },
          {
            id: "316",
            name: "\u0642\u0635\u0631 \u0634\u06cc\u0631\u06cc\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.5159031,
            lon: 45.5776859
          },
          {
            id: "317",
            name: "\u06af\u06cc\u0644\u0627\u0646 \u063a\u0631\u0628",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.142222,
            lon: 45.920278
          },
          {
            id: "318",
            name: "\u0647\u0631\u0633\u06cc\u0646",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.2719149,
            lon: 47.6046183
          },
          {
            id: "319",
            name: "\u0635\u062d\u0646\u0647",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.481389,
            lon: 47.690833
          },
          {
            id: "320",
            name: "\u067e\u0627\u0648\u0647",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 35.043333,
            lon: 46.356389
          },
          {
            id: "321",
            name: "\u062c\u0648\u0627\u0646\u0631\u0648\u062f",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: 34.806667,
            lon: 46.488611
          },
          {
            id: "322",
            name: "\u0634\u0627\u0647\u0648",
            province: "\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647",
            province_id: "22",
            lat: null,
            lon: null
          },
          {
            id: "323",
            name: "\u06cc\u0627\u0633\u0648\u062c",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: null,
            lon: null
          },
          {
            id: "324",
            name: "\u06af\u0686\u0633\u0627\u0631\u0627\u0646",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: 30.35,
            lon: 50.8
          },
          {
            id: "325",
            name: "\u062f\u0646\u0627",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: 30.9516666,
            lon: 51.4375
          },
          {
            id: "326",
            name: "\u062f\u0648\u06af\u0646\u0628\u062f\u0627\u0646",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: null,
            lon: null
          },
          {
            id: "327",
            name: "\u0633\u06cc \u0633\u062e\u062a",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: null,
            lon: null
          },
          {
            id: "328",
            name: "\u062f\u0647\u062f\u0634\u062a",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: null,
            lon: null
          },
          {
            id: "329",
            name: "\u0644\u06cc\u06a9\u06a9",
            province:
              "\u06a9\u0647\u06a9\u06cc\u0644\u0648\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f",
            province_id: "23",
            lat: null,
            lon: null
          },
          {
            id: "330",
            name: "\u06af\u0631\u06af\u0627\u0646",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 36.8456427,
            lon: 54.4393363
          },
          {
            id: "331",
            name: "\u0622\u0642 \u0642\u0644\u0627",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.013889,
            lon: 54.455
          },
          {
            id: "332",
            name: "\u06af\u0646\u0628\u062f \u06a9\u0627\u0648\u0648\u0633",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.25,
            lon: 55.167222
          },
          {
            id: "333",
            name: "\u0639\u0644\u06cc \u0622\u0628\u0627\u062f \u06a9\u062a\u0648\u0644",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: null,
            lon: null
          },
          {
            id: "334",
            name: "\u0645\u06cc\u0646\u0648 \u062f\u0634\u062a",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.228889,
            lon: 55.374722
          },
          {
            id: "335",
            name: "\u062a\u0631\u06a9\u0645\u0646",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: null,
            lon: null
          },
          {
            id: "336",
            name: "\u06a9\u0631\u062f\u06a9\u0648\u06cc",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 36.7941426,
            lon: 54.110274
          },
          {
            id: "337",
            name: "\u0628\u0646\u062f\u0631 \u06af\u0632",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 36.774965,
            lon: 53.9461749
          },
          {
            id: "338",
            name: "\u06a9\u0644\u0627\u0644\u0647",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.380833,
            lon: 55.491667
          },
          {
            id: "339",
            name: "\u0622\u0632\u0627\u062f \u0634\u0647\u0631",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.086944,
            lon: 55.173889
          },
          {
            id: "340",
            name: "\u0631\u0627\u0645\u06cc\u0627\u0646",
            province: "\u06af\u0644\u0633\u062a\u0627\u0646",
            province_id: "24",
            lat: 37.016111,
            lon: 55.141111
          },
          {
            id: "341",
            name: "\u0631\u0634\u062a",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.280833,
            lon: 49.583056
          },
          {
            id: "342",
            name: "\u0645\u0646\u062c\u06cc\u0644",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "343",
            name: "\u0644\u0646\u06af\u0631\u0648\u062f",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.196944,
            lon: 50.153611
          },
          {
            id: "344",
            name: "\u0631\u0648\u062f \u0633\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.1378415,
            lon: 50.2836199
          },
          {
            id: "345",
            name: "\u062a\u0627\u0644\u0634",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "346",
            name: "\u0622\u0633\u062a\u0627\u0631\u0627",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 38.429167,
            lon: 48.871944
          },
          {
            id: "347",
            name: "\u0645\u0627\u0633\u0648\u0644\u0647",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "348",
            name: "\u0622\u0633\u062a\u0627\u0646\u0647 \u0627\u0634\u0631\u0641\u06cc\u0647",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.2598022,
            lon: 49.9436621
          },
          {
            id: "349",
            name: "\u0631\u0648\u062f\u0628\u0627\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 36.8241289,
            lon: 49.4237274
          },
          {
            id: "350",
            name: "\u0641\u0648\u0645\u0646",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.223889,
            lon: 49.3125
          },
          {
            id: "351",
            name: "\u0635\u0648\u0645\u0639\u0647 \u0633\u0631\u0627",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.311667,
            lon: 49.321944
          },
          {
            id: "352",
            name: "\u0628\u0646\u062f\u0631\u0627\u0646\u0632\u0644\u06cc",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.4724467,
            lon: 49.4587312
          },
          {
            id: "353",
            name: "\u06a9\u0644\u0627\u0686\u0627\u06cc",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "354",
            name: "\u0647\u0634\u062a\u067e\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "355",
            name: "\u0631\u0636\u0648\u0627\u0646 \u0634\u0647\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.550675,
            lon: 49.1409801
          },
          {
            id: "356",
            name: "\u0645\u0627\u0633\u0627\u0644",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.3621185,
            lon: 49.1314769
          },
          {
            id: "357",
            name: "\u0634\u0641\u062a",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 39.630631,
            lon: -78.929542
          },
          {
            id: "358",
            name: "\u0633\u06cc\u0627\u0647\u06a9\u0644",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.152778,
            lon: 49.870833
          },
          {
            id: "359",
            name: "\u0627\u0645\u0644\u0634",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.0916334,
            lon: 50.1869377
          },
          {
            id: "360",
            name: "\u0644\u0627\u0647\u06cc\u062c\u0627\u0646",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: 37.207222,
            lon: 50.003889
          },
          {
            id: "361",
            name: "\u062e\u0634\u06a9 \u0628\u06cc\u062c\u0627\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "362",
            name: "\u062e\u0645\u0627\u0645",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "363",
            name: "\u0644\u0634\u062a \u0646\u0634\u0627",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "364",
            name: "\u0628\u0646\u062f\u0631 \u06a9\u06cc\u0627\u0634\u0647\u0631",
            province: "\u06af\u06cc\u0644\u0627\u0646",
            province_id: "25",
            lat: null,
            lon: null
          },
          {
            id: "365",
            name: "\u062e\u0631\u0645 \u0622\u0628\u0627\u062f",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.487778,
            lon: 48.355833
          },
          {
            id: "366",
            name: "\u0645\u0627\u0647\u0634\u0647\u0631",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: null,
            lon: null
          },
          {
            id: "367",
            name: "\u062f\u0632\u0641\u0648\u0644",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 32.3830777,
            lon: 48.4235841
          },
          {
            id: "368",
            name: "\u0628\u0631\u0648\u062c\u0631\u062f",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.8941993,
            lon: 48.767033
          },
          {
            id: "369",
            name: "\u062f\u0648\u0631\u0648\u062f",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.4955028,
            lon: 49.0631743
          },
          {
            id: "370",
            name: "\u0627\u0644\u06cc\u06af\u0648\u062f\u0631\u0632",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.400556,
            lon: 49.695
          },
          {
            id: "371",
            name: "\u0627\u0632\u0646\u0627",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.455833,
            lon: 49.455556
          },
          {
            id: "372",
            name: "\u0646\u0648\u0631 \u0622\u0628\u0627\u062f",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 30.114167,
            lon: 51.521667
          },
          {
            id: "373",
            name: "\u06a9\u0648\u0647\u062f\u0634\u062a",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.535,
            lon: 47.606111
          },
          {
            id: "374",
            name: "\u0627\u0644\u0634\u062a\u0631",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.8639888,
            lon: 48.2642387
          },
          {
            id: "375",
            name: "\u067e\u0644\u062f\u062e\u062a\u0631",
            province: "\u0644\u0631\u0633\u062a\u0627\u0646",
            province_id: "26",
            lat: 33.153611,
            lon: 47.713611
          },
          {
            id: "376",
            name: "\u0633\u0627\u0631\u06cc",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.563333,
            lon: 53.06
          },
          {
            id: "461",
            name: "\u0633\u0644\u0645\u0627\u0646 \u0634\u0647\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.563333,
            lon: 53.06
          },
          {
            id: "377",
            name: "\u0622\u0645\u0644",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.469722,
            lon: 52.350833
          },
          {
            id: "378",
            name: "\u0628\u0627\u0628\u0644",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 32.468191,
            lon: 44.5501935
          },
          {
            id: "379",
            name: "\u0628\u0627\u0628\u0644\u0633\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.7025,
            lon: 52.6575
          },
          {
            id: "380",
            name: "\u0628\u0647\u0634\u0647\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.692222,
            lon: 53.5525
          },
          {
            id: "381",
            name: "\u062a\u0646\u06a9\u0627\u0628\u0646",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.816389,
            lon: 50.873889
          },
          {
            id: "382",
            name: "\u062c\u0648\u06cc\u0628\u0627\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.641111,
            lon: 52.9125
          },
          {
            id: "383",
            name: "\u0686\u0627\u0644\u0648\u0633",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.6459174,
            lon: 51.406979
          },
          {
            id: "384",
            name: "\u0631\u0627\u0645\u0633\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.903056,
            lon: 50.658333
          },
          {
            id: "385",
            name: "\u0633\u0648\u0627\u062f \u06a9\u0648\u0647",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.3040255,
            lon: 52.8852403
          },
          {
            id: "386",
            name: "\u0642\u0627\u0626\u0645 \u0634\u0647\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.463056,
            lon: 52.86
          },
          {
            id: "387",
            name: "\u0646\u06a9\u0627",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.650833,
            lon: 53.299167
          },
          {
            id: "388",
            name: "\u0646\u0648\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 50.3851246,
            lon: 3.2642436
          },
          {
            id: "389",
            name: "\u0628\u0644\u062f\u0647",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: null,
            lon: null
          },
          {
            id: "390",
            name: "\u0646\u0648\u0634\u0647\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.648889,
            lon: 51.496111
          },
          {
            id: "391",
            name: "\u067e\u0644 \u0633\u0641\u06cc\u062f",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: null,
            lon: null
          },
          {
            id: "392",
            name: "\u0645\u062d\u0645\u0648\u062f \u0622\u0628\u0627\u062f",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.631944,
            lon: 52.262778
          },
          {
            id: "393",
            name: "\u0641\u0631\u06cc\u062f\u0648\u0646 \u06a9\u0646\u0627\u0631",
            province: "\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646",
            province_id: "27",
            lat: 36.686389,
            lon: 52.5225
          },
          {
            id: "394",
            name: "\u0627\u0631\u0627\u06a9",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 34.091667,
            lon: 49.689167
          },
          {
            id: "395",
            name: "\u0622\u0634\u062a\u06cc\u0627\u0646",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 34.521944,
            lon: 50.006111
          },
          {
            id: "396",
            name: "\u062a\u0641\u0631\u0634",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 34.691944,
            lon: 50.013056
          },
          {
            id: "397",
            name: "\u062e\u0645\u06cc\u0646",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 33.6406148,
            lon: 50.0771125
          },
          {
            id: "398",
            name: "\u062f\u0644\u06cc\u062c\u0627\u0646",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 33.990556,
            lon: 50.683889
          },
          {
            id: "399",
            name: "\u0633\u0627\u0648\u0647",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 35.021389,
            lon: 50.356667
          },
          {
            id: "400",
            name: "\u0633\u0631\u0628\u0646\u062f",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: null,
            lon: null
          },
          {
            id: "401",
            name: "\u0645\u062d\u0644\u0627\u062a",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 33.9085748,
            lon: 50.4552616
          },
          {
            id: "402",
            name: "\u0634\u0627\u0632\u0646\u062f",
            province: "\u0645\u0631\u06a9\u0632\u06cc",
            province_id: "28",
            lat: 33.9275,
            lon: 49.411667
          },
          {
            id: "403",
            name: "\u0628\u0646\u062f\u0631\u0639\u0628\u0627\u0633",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 27.1832216,
            lon: 56.2666455
          },
          {
            id: "405",
            name: "\u06a9\u06cc\u0634",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "406",
            name: "\u0628\u0646\u062f\u0631 \u0644\u0646\u06af\u0647",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 26.558056,
            lon: 54.880556
          },
          {
            id: "407",
            name: "\u0628\u0633\u062a\u06a9",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 27.199167,
            lon: 54.366667
          },
          {
            id: "408",
            name: "\u062d\u0627\u062c\u06cc \u0622\u0628\u0627\u062f",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 28.309167,
            lon: 55.901667
          },
          {
            id: "409",
            name: "\u062f\u0647\u0628\u0627\u0631\u0632",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "410",
            name: "\u0627\u0646\u06af\u0647\u0631\u0627\u0646",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "411",
            name: "\u0645\u06cc\u0646\u0627\u0628",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 27.146667,
            lon: 57.08
          },
          {
            id: "412",
            name: "\u0627\u0628\u0648\u0645\u0648\u0633\u06cc",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 25.8797106,
            lon: 55.0328017
          },
          {
            id: "413",
            name: "\u0628\u0646\u062f\u0631 \u062c\u0627\u0633\u06a9",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "414",
            name: "\u062a\u0646\u0628 \u0628\u0632\u0631\u06af",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "415",
            name: "\u0628\u0646\u062f\u0631 \u062e\u0645\u06cc\u0631",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "416",
            name: "\u067e\u0627\u0631\u0633\u06cc\u0627\u0646",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "417",
            name: "\u0642\u0634\u0645",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: 26.8118673,
            lon: 55.8913207
          },
          {
            id: "444",
            name: "\u0633\u06cc\u0631\u06cc\u06a9",
            province: "\u0647\u0631\u0645\u0632\u06af\u0627\u0646",
            province_id: "29",
            lat: null,
            lon: null
          },
          {
            id: "418",
            name: "\u0647\u0645\u062f\u0627\u0646",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.7607999,
            lon: 48.3988186
          },
          {
            id: "419",
            name: "\u0645\u0644\u0627\u06cc\u0631",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.296944,
            lon: 48.823611
          },
          {
            id: "420",
            name: "\u062a\u0648\u06cc\u0633\u0631\u06a9\u0627\u0646",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.548056,
            lon: 48.446944
          },
          {
            id: "421",
            name: "\u0646\u0647\u0627\u0648\u0646\u062f",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.188611,
            lon: 48.376944
          },
          {
            id: "422",
            name: "\u06a9\u0628\u0648\u062f\u0631 \u0627\u0647\u0646\u06af",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: null,
            lon: null
          },
          {
            id: "423",
            name: "\u0631\u0632\u0646",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 35.386667,
            lon: 49.033889
          },
          {
            id: "424",
            name: "\u0627\u0633\u062f\u0622\u0628\u0627\u062f",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.7825,
            lon: 48.118611
          },
          {
            id: "425",
            name: "\u0628\u0647\u0627\u0631",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: 34.9083252,
            lon: 48.4392729
          },
          {
            id: "446",
            name: "\u0641\u0627\u0645\u0646\u06cc\u0646",
            province: "\u0647\u0645\u062f\u0627\u0646",
            province_id: "30",
            lat: null,
            lon: null
          },
          {
            id: "426",
            name: "\u06cc\u0632\u062f",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 32.1006387,
            lon: 54.4342138
          },
          {
            id: "427",
            name: "\u062a\u0641\u062a",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: "27.97890740",
            lon: "-97.39860410"
          },
          {
            id: "428",
            name: "\u0627\u0631\u062f\u06a9\u0627\u0646",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 32.31,
            lon: 54.0175
          },
          {
            id: "429",
            name: "\u0627\u0628\u0631\u06a9\u0648\u0647",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 31.1304036,
            lon: 53.2503736
          },
          {
            id: "430",
            name: "\u0645\u06cc\u0628\u062f",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 32.2487226,
            lon: 54.0079341
          },
          {
            id: "431",
            name: "\u0637\u0628\u0633",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 33.595833,
            lon: 56.924444
          },
          {
            id: "432",
            name: "\u0628\u0627\u0641\u0642",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 31.612778,
            lon: 55.410556
          },
          {
            id: "433",
            name: "\u0645\u0647\u0631\u06cc\u0632",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: 31.591667,
            lon: 54.431667
          },
          {
            id: "434",
            name: "\u0627\u0634\u06a9\u0630\u0631",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "435",
            name: "\u0647\u0631\u0627\u062a",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "436",
            name: "\u062e\u0636\u0631\u0622\u0628\u0627\u062f",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "437",
            name: "\u0634\u0627\u0647\u062f\u06cc\u0647",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "438",
            name: "\u062d\u0645\u06cc\u062f\u06cc\u0647 \u0634\u0647\u0631",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "439",
            name: "\u0633\u06cc\u062f \u0645\u06cc\u0631\u0632\u0627",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "440",
            name: "\u0632\u0627\u0631\u0686",
            province: "\u06cc\u0632\u062f",
            province_id: "31",
            lat: null,
            lon: null
          },
          {
            id: "467",
            name: "\u0634\u0627\u0646\u062f\u06cc\u0632",
            province:
              "\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc",
            province_id: "11",
            lat: 36.2604623,
            lon: 59.6167549
          }
        ]
      },
      {
        path: "provinceSelect.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return Number(
                $state.centersApi.data.data.find(item => item.type_id == 1)
                  .province
              );
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "provinceSelect.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "citySelect.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return Number(
                $state.centersApi.data.data.find(item => item.type_id == 1).city
              );
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "citySelect.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "centersApi.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "centersApi"
      },
      {
        path: "centersApi.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "centersApi"
      },
      {
        path: "centersApi.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "centersApi"
      },
      {
        path: "address.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {
                const provinceId = $state.centersApi.data.data.find(
                  item => item.type_id == 1
                ).province;
                const cityId = $state.centersApi.data.data.find(
                  item => item.type_id == 1
                ).city;
                const provinceName = $state.province.find(
                  item => item.id == provinceId
                ).name;
                const cityName = $state.cities.find(
                  item => item.id == cityId
                ).name;
                let address = $state.centersApi.data.data
                  .find(item => item.type_id == 1)
                  .address.replace(/<p>/g, "")
                  .replace(/<\/p>/g, "");
                address = address
                  .replace(`${provinceName}, ${cityName}`, "")
                  .trim();
                return address;
              })();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "newPhoneNumbers",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "input3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          "\u0648\u06cc\u0632\u06cc\u062a"
      },
      {
        path: "galleryApi.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "galleryApi"
      },
      {
        path: "galleryApi.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "galleryApi"
      },
      {
        path: "galleryApi.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "galleryApi"
      },
      {
        path: "selectdImage",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "checkbox.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox2.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox3.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox4.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "imageDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "deleteImageDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "oldPhoneNumbers",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "map.lat",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {
                const centers = Array.isArray($state.centersApi?.data?.data)
                  ? $state.centersApi.data.data
                  : [];
                const lat =
                  centers.find(c => c.id !== 5532 && Number(c.type_id) === 1)
                    ?.lat ?? 35.70069003610754;
                return lat;
              })();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return 35.70069003610754;
              }
              throw e;
            }
          })()
      },
      {
        path: "map.lng",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {
                const centers = Array.isArray($state.centersApi?.data?.data)
                  ? $state.centersApi.data.data
                  : [];
                const lat =
                  centers.find(c => c.id !== 5532 && Number(c.type_id) === 1)
                    ?.lat ?? 51.35918498039246;
                return lat;
              })();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return 51.35918498039246;
              }
              throw e;
            }
          })()
      },
      {
        path: "profileTells.oldTells",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "profileTells.newTells",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "isLoadingSave",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "uploadedFile",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.root
      )}
    >
      <ApiRequest
        data-plasmic-name={"centersApi"}
        data-plasmic-override={overrides.centersApi}
        className={classNames("__wab_instance", sty.centersApi)}
        errorDisplay={
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__c4Wer
            )}
          >
            {""}
          </div>
        }
        loadingDisplay={
          <div className={classNames(projectcss.all, sty.freeBox__cdW1Q)}>
            <Icon34Icon
              className={classNames(projectcss.all, sty.svg__c4N7Z)}
              role={"img"}
            />
          </div>
        }
        method={"GET"}
        onError={async (...eventArgs: any) => {
          generateStateOnChangeProp($state, ["centersApi", "error"]).apply(
            null,
            eventArgs
          );
        }}
        onLoading={async (...eventArgs: any) => {
          generateStateOnChangeProp($state, ["centersApi", "loading"]).apply(
            null,
            eventArgs
          );
        }}
        onSuccess={async (...eventArgs: any) => {
          generateStateOnChangeProp($state, ["centersApi", "data"]).apply(
            null,
            eventArgs
          );

          (async data => {
            const $steps = {};

            $steps["updateProfileTellsOldTells"] = true
              ? (() => {
                  const actionArgs = {
                    variable: {
                      objRoot: $state,
                      variablePath: ["profileTells", "oldTells"]
                    },
                    operation: 0,
                    value: $state?.centersApi?.data?.data?.find(
                      item => item.type_id == 1
                    )?.tells
                  };
                  return (({ variable, value, startIndex, deleteCount }) => {
                    if (!variable) {
                      return;
                    }
                    const { objRoot, variablePath } = variable;

                    $stateSet(objRoot, variablePath, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateProfileTellsOldTells"] != null &&
              typeof $steps["updateProfileTellsOldTells"] === "object" &&
              typeof $steps["updateProfileTellsOldTells"].then === "function"
            ) {
              $steps["updateProfileTellsOldTells"] = await $steps[
                "updateProfileTellsOldTells"
              ];
            }

            $steps["sendEvent"] =
              $state.profileTells.oldTells.some(tellObj =>
                tellObj.tell.match(/^09\d{9}$/)
              ) === true
                ? (() => {
                    const actionArgs = {
                      args: [
                        (() => {
                          try {
                            return {
                              event_group: "EditProfile",
                              data: {
                                MobileForOfficeTell:
                                  $state.profileTells.oldTells.some(tellObj =>
                                    tellObj.tell.match(/^09\d{9}$/)
                                  ),
                                CenterId: $state.centersApi.data.data.find(
                                  center => center.type_id === 1
                                ).id,
                                CenterName: $state.centersApi.data.data.find(
                                  center => center.type_id === 1
                                ).name,
                                CenterTell: $state.profileTells.oldTells
                              },
                              event_type: "MobileForOfficeTell"
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Splunk.sendLog"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
            if (
              $steps["sendEvent"] != null &&
              typeof $steps["sendEvent"] === "object" &&
              typeof $steps["sendEvent"].then === "function"
            ) {
              $steps["sendEvent"] = await $steps["sendEvent"];
            }

            $steps["updateMapLat"] = $state.centersApi.data.data.find(
              center =>
                center.id !== "5532" &&
                center.type_id === 1 &&
                center.lat !== null
            )
              ? (() => {
                  const actionArgs = {
                    variable: {
                      objRoot: $state,
                      variablePath: ["map", "lat"]
                    },
                    operation: 0,
                    value: $state.centersApi.data.data.find(
                      center => center.id !== 5532 && center.type_id === 1
                    ).lat
                  };
                  return (({ variable, value, startIndex, deleteCount }) => {
                    if (!variable) {
                      return;
                    }
                    const { objRoot, variablePath } = variable;

                    $stateSet(objRoot, variablePath, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateMapLat"] != null &&
              typeof $steps["updateMapLat"] === "object" &&
              typeof $steps["updateMapLat"].then === "function"
            ) {
              $steps["updateMapLat"] = await $steps["updateMapLat"];
            }

            $steps["updateMapLng"] = $state.centersApi.data.data.find(
              center =>
                center.id !== "5532" &&
                center.type_id === 1 &&
                center.lon !== null
            )
              ? (() => {
                  const actionArgs = {
                    variable: {
                      objRoot: $state,
                      variablePath: ["map", "lng"]
                    },
                    operation: 0,
                    value: $state.centersApi.data.data.find(
                      center => center.id !== 5532 && center.type_id === 1
                    ).lon
                  };
                  return (({ variable, value, startIndex, deleteCount }) => {
                    if (!variable) {
                      return;
                    }
                    const { objRoot, variablePath } = variable;

                    $stateSet(objRoot, variablePath, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateMapLng"] != null &&
              typeof $steps["updateMapLng"] === "object" &&
              typeof $steps["updateMapLng"].then === "function"
            ) {
              $steps["updateMapLng"] = await $steps["updateMapLng"];
            }
          }).apply(null, eventArgs);
        }}
        ref={ref => {
          $refs["centersApi"] = ref;
        }}
        url={"https://api.paziresh24.com/V1/doctor/centers"}
      >
        <div className={classNames(projectcss.all, sty.freeBox__bj1H7)}>
          <div className={classNames(projectcss.all, sty.freeBox__do9Q)}>
            <Select
              data-plasmic-name={"provinceSelect"}
              data-plasmic-override={overrides.provinceSelect}
              onChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "provinceSelect",
                  "value"
                ]).apply(null, eventArgs);
              }}
              onOpenChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "provinceSelect",
                  "open"
                ]).apply(null, eventArgs);
              }}
              open={generateStateValueProp($state, ["provinceSelect", "open"])}
              options={(() => {
                try {
                  return $state.province.map(province => ({
                    label: province.name,
                    value: +province.id
                  }));
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              placeholder={"\u0627\u0633\u062a\u0627\u0646"}
              triggerClassName={classNames(
                "__wab_instance",
                sty.provinceSelect
              )}
              value={generateStateValueProp($state, [
                "provinceSelect",
                "value"
              ])}
            />

            <Select
              data-plasmic-name={"citySelect"}
              data-plasmic-override={overrides.citySelect}
              onChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "citySelect",
                  "value"
                ]).apply(null, eventArgs);
              }}
              onOpenChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["citySelect", "open"]).apply(
                  null,
                  eventArgs
                );
              }}
              open={generateStateValueProp($state, ["citySelect", "open"])}
              options={(() => {
                try {
                  return $state.cities
                    .filter(
                      city => +city.province_id == +$state.provinceSelect.value
                    )
                    .map(item => ({
                      label: item.name,
                      value: +item.id
                    }));
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              placeholder={"\u0634\u0647\u0631"}
              triggerClassName={classNames("__wab_instance", sty.citySelect)}
              value={generateStateValueProp($state, ["citySelect", "value"])}
            />
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__p4HiG
            )}
          >
            {"\u0622\u062f\u0631\u0633 \u0645\u0637\u0628 : "}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ztYm)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__uMu8
              )}
            >
              <React.Fragment>
                {(() => {
                  try {
                    return (() => {
                      const provinceId = $state.centersApi.data.data.find(
                        item => item.type_id == 1
                      ).province;
                      const cityId = $state.centersApi.data.data.find(
                        item => item.type_id == 1
                      ).city;
                      const provinceName = $state.province.find(
                        item => item.id == provinceId
                      ).name;
                      const cityName = $state.cities.find(
                        item => item.id == cityId
                      ).name;
                      return `${provinceName}, ${cityName}`;
                    })();
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return "";
                    }
                    throw e;
                  }
                })()}
              </React.Fragment>
            </div>
            <Input
              data-plasmic-name={"address"}
              data-plasmic-override={overrides.address}
              className={classNames("__wab_instance", sty.address)}
              onChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["address", "value"]).apply(
                  null,
                  eventArgs
                );
              }}
              placeholder={
                "\u062e\u06cc\u0627\u0628\u0627\u0646\u060c \u06a9\u0648\u0686\u0647\u060c \u067e\u0644\u0627\u06a9\u060c \u0637\u0628\u0642\u0647\u060c \u0648\u0627\u062d\u062f ( \u0645\u062b\u0627\u0644 : \u062e\u06cc\u0627\u0628\u0627\u0646 \u0648\u0644\u06cc\u0639\u0635\u0631\u060c \u0628\u0627\u0644\u0627\u062a\u0631 \u0627\u0632 \u067e\u0627\u0631\u06a9 \u0633\u0627\u0639\u06cc\u060c \u0628\u0646 \u0628\u0633\u062a \u06af\u0644\u060c \u0633\u0627\u062e\u062a\u0645\u0627\u0646 \u06af\u0644\u060c \u0637\u0628\u0642\u0647 4\u060c \u0648\u0627\u062d\u062f 404\u060c \u06a9\u0644\u06cc\u0646\u06cc\u06a9 \u0648\u0627\u0631\u06cc\u0633 \u0627\u0631\u06a9\u06cc\u062f\u0647.)"
              }
              type={"text"}
              value={generateStateValueProp($state, ["address", "value"])}
            />
          </div>
          <ProfileTells
            data-plasmic-name={"profileTells"}
            data-plasmic-override={overrides.profileTells}
            className={classNames("__wab_instance", sty.profileTells)}
            newTells={generateStateValueProp($state, [
              "profileTells",
              "newTells"
            ])}
            oldTells={generateStateValueProp($state, [
              "profileTells",
              "oldTells"
            ])}
            onNewTellsChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "profileTells",
                "newTells"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onOldTellsChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "profileTells",
                "oldTells"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <Input
            data-plasmic-name={"input3"}
            data-plasmic-override={overrides.input3}
            className={classNames("__wab_instance", sty.input3)}
            disabled={true}
            onChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["input3", "value"]).apply(
                null,
                eventArgs
              );
            }}
            placeholder={"\u062e\u062f\u0645\u0627\u062a \u0645\u0637\u0628"}
            type={"text"}
            value={generateStateValueProp($state, ["input3", "value"])}
          />

          <ApiRequest
            data-plasmic-name={"galleryApi"}
            data-plasmic-override={overrides.galleryApi}
            className={classNames("__wab_instance", sty.galleryApi)}
            errorDisplay={null}
            loadingDisplay={
              <div className={classNames(projectcss.all, sty.freeBox___4HCMu)}>
                <Icon10Icon
                  className={classNames(projectcss.all, sty.svg__zaVdh)}
                  role={"img"}
                />
              </div>
            }
            method={"GET"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["galleryApi", "error"]).apply(
                null,
                eventArgs
              );
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "galleryApi",
                "loading"
              ]).apply(null, eventArgs);
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["galleryApi", "data"]).apply(
                null,
                eventArgs
              );
            }}
            ref={ref => {
              $refs["galleryApi"] = ref;
            }}
            url={(() => {
              try {
                return (() => {
                  const centerId = $state.centersApi.data.data.find(
                    item => item.type_id == 1
                  ).id;
                  return `https://api.paziresh24.com/V1/doctor/center/gallery?center_id=${centerId}`;
                })();
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
          >
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox__axO8D,
                "no-scroll"
              )}
            >
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.galleryApi.data.data;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__feGoA)}
                    displayHeight={"112px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    height={``}
                    key={currentIndex}
                    loading={"lazy"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDialogOpen"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["imageDialog", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDialogOpen"] != null &&
                        typeof $steps["updateDialogOpen"] === "object" &&
                        typeof $steps["updateDialogOpen"].then === "function"
                      ) {
                        $steps["updateDialogOpen"] = await $steps[
                          "updateDialogOpen"
                        ];
                      }

                      $steps["updateSelectdImage"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["selectdImage"]
                              },
                              operation: 0,
                              value: currentItem
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateSelectdImage"] != null &&
                        typeof $steps["updateSelectdImage"] === "object" &&
                        typeof $steps["updateSelectdImage"].then === "function"
                      ) {
                        $steps["updateSelectdImage"] = await $steps[
                          "updateSelectdImage"
                        ];
                      }
                    }}
                    src={(() => {
                      try {
                        return currentItem.url;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                );
              })}
            </div>
          </ApiRequest>
          <div className={classNames(projectcss.all, sty.freeBox__pr7VM)}>
            <FileInput
              data-plasmic-name={"fragmentFileInput"}
              data-plasmic-override={overrides.fragmentFileInput}
              accept={"image/png, image/jpg, image/jpeg, image/bmp"}
              className={classNames("__wab_instance", sty.fragmentFileInput)}
              inputId={"gallery-input"}
              inputType={"file"}
              onFileSelect={async files => {
                const $steps = {};

                $steps["updateUploadedFile"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["uploadedFile"]
                        },
                        operation: 0,
                        value: files
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        $stateSet(objRoot, variablePath, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateUploadedFile"] != null &&
                  typeof $steps["updateUploadedFile"] === "object" &&
                  typeof $steps["updateUploadedFile"].then === "function"
                ) {
                  $steps["updateUploadedFile"] = await $steps[
                    "updateUploadedFile"
                  ];
                }

                $steps["uploadImage"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          "POST",
                          "https://api.paziresh24.com/V1/doctor/center/gallery",
                          undefined,
                          (() => {
                            try {
                              return (() => {
                                const file = files[0];
                                const formData = params => {
                                  const dt = new globalThis.FormData();
                                  for (const [key, value] of Object.entries(
                                    params
                                  )) {
                                    dt.append(key, value);
                                  }
                                  return dt;
                                };
                                const data = formData({ file });
                                return data;
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })(),
                          (() => {
                            try {
                              return {
                                ...$ctx.Fragment.apiConfig,
                                headers: {
                                  ...$ctx.Fragment.previewApiConfig?.headers,
                                  "Content-Type": "multipart/form-data"
                                }
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Fragment.apiRequest"]?.apply(
                        null,
                        [...actionArgs.args]
                      );
                    })()
                  : undefined;
                if (
                  $steps["uploadImage"] != null &&
                  typeof $steps["uploadImage"] === "object" &&
                  typeof $steps["uploadImage"].then === "function"
                ) {
                  $steps["uploadImage"] = await $steps["uploadImage"];
                }

                $steps["invokeGlobalAction"] = false
                  ? (() => {
                      const actionArgs = {
                        args: [
                          undefined,
                          (() => {
                            try {
                              return $steps.uploadImage?.data?.message;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Fragment.showToast"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
                if (
                  $steps["invokeGlobalAction"] != null &&
                  typeof $steps["invokeGlobalAction"] === "object" &&
                  typeof $steps["invokeGlobalAction"].then === "function"
                ) {
                  $steps["invokeGlobalAction"] = await $steps[
                    "invokeGlobalAction"
                  ];
                }

                $steps["updateUploadedFile2"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["uploadedFile"]
                        },
                        operation: 1
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        $stateSet(objRoot, variablePath, undefined);
                        return undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateUploadedFile2"] != null &&
                  typeof $steps["updateUploadedFile2"] === "object" &&
                  typeof $steps["updateUploadedFile2"].then === "function"
                ) {
                  $steps["updateUploadedFile2"] = await $steps[
                    "updateUploadedFile2"
                  ];
                }

                $steps["runActionOnGalleryApi"] = true
                  ? (() => {
                      const actionArgs = {
                        tplRef: "galleryApi",
                        action: "refresh"
                      };
                      return (({ tplRef, action, args }) => {
                        return $refs?.[tplRef]?.[action]?.(...(args ?? []));
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["runActionOnGalleryApi"] != null &&
                  typeof $steps["runActionOnGalleryApi"] === "object" &&
                  typeof $steps["runActionOnGalleryApi"].then === "function"
                ) {
                  $steps["runActionOnGalleryApi"] = await $steps[
                    "runActionOnGalleryApi"
                  ];
                }
              }}
            >
              {(() => {
                try {
                  return !$state.uploadedFile?.[0];
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___0EeuL)}
                >
                  {(() => {
                    try {
                      return !$state.uploadedFile?.[0];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })() ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__mDSc2)}
                      role={"img"}
                    />
                  ) : null}
                  {(() => {
                    try {
                      return !!$state.uploadedFile?.[0];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })() ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iKyGh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cLqYs
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return $state.uploadedFile?.[0]?.name;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                      <Icon40Icon
                        className={classNames(projectcss.all, sty.svg__rynyh)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__irtxf
                    )}
                  >
                    {"\u0639\u06a9\u0633 \u0645\u0637\u0628"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bJllt
                    )}
                  >
                    {
                      "( \u062d\u062f\u0627\u06a9\u062b\u0631 \u06cc\u06a9 \u0645\u06af\u0627\u0628\u0627\u06cc\u062a )"
                    }
                  </div>
                </div>
              ) : null}
            </FileInput>
            {(() => {
              try {
                return !!$state.uploadedFile?.[0];
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <div className={classNames(projectcss.all, sty.freeBox__kLsnt)}>
                <Icon34Icon
                  className={classNames(projectcss.all, sty.svg__p7Qc)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7FhyW
                  )}
                >
                  {
                    " \u062f\u0631\u062d\u0627\u0644 \u0622\u067e\u0644\u0648\u062f \u0639\u06a9\u0633"
                  }
                </div>
              </div>
            ) : null}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__qaWiL)}>
            <Checkbox
              data-plasmic-name={"checkbox"}
              data-plasmic-override={overrides.checkbox}
              className={classNames("__wab_instance", sty.checkbox)}
              isChecked={
                generateStateValueProp($state, ["checkbox", "isChecked"]) ??
                false
              }
              name={"metro"}
              onChange={async (...eventArgs: any) => {
                ((...eventArgs) => {
                  generateStateOnChangeProp($state, ["checkbox", "isChecked"])(
                    eventArgs[0]
                  );
                }).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zhSoP
                )}
              >
                {
                  "\u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u0645\u062a\u0631\u0648 \u062f\u0627\u0631\u062f"
                }
              </div>
            </Checkbox>
            <Checkbox
              data-plasmic-name={"checkbox2"}
              data-plasmic-override={overrides.checkbox2}
              className={classNames("__wab_instance", sty.checkbox2)}
              isChecked={
                generateStateValueProp($state, ["checkbox2", "isChecked"]) ??
                false
              }
              name={"metro"}
              onChange={async (...eventArgs: any) => {
                ((...eventArgs) => {
                  generateStateOnChangeProp($state, ["checkbox2", "isChecked"])(
                    eventArgs[0]
                  );
                }).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__k0En4
                )}
              >
                {
                  "\u0622\u0633\u0627\u0646\u0633\u0648\u0631 \u062f\u0627\u0631\u062f"
                }
              </div>
            </Checkbox>
            <Checkbox
              data-plasmic-name={"checkbox3"}
              data-plasmic-override={overrides.checkbox3}
              className={classNames("__wab_instance", sty.checkbox3)}
              isChecked={
                generateStateValueProp($state, ["checkbox3", "isChecked"]) ??
                false
              }
              name={"metro"}
              onChange={async (...eventArgs: any) => {
                ((...eventArgs) => {
                  generateStateOnChangeProp($state, ["checkbox3", "isChecked"])(
                    eventArgs[0]
                  );
                }).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__si3C
                )}
              >
                {
                  "\u0627\u0645\u06a9\u0627\u0646 \u067e\u0630\u06cc\u0631\u0634 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0648\u06cc\u0644\u0686\u0631\u06cc \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f"
                }
              </div>
            </Checkbox>
            <Checkbox
              data-plasmic-name={"checkbox4"}
              data-plasmic-override={overrides.checkbox4}
              className={classNames("__wab_instance", sty.checkbox4)}
              isChecked={
                generateStateValueProp($state, ["checkbox4", "isChecked"]) ??
                false
              }
              name={"metro"}
              onChange={async (...eventArgs: any) => {
                ((...eventArgs) => {
                  generateStateOnChangeProp($state, ["checkbox4", "isChecked"])(
                    eventArgs[0]
                  );
                }).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___29Hty
                )}
              >
                {
                  "\u062c\u0627\u06cc \u067e\u0627\u0631\u06a9 \u062f\u0627\u0631\u062f"
                }
              </div>
            </Checkbox>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__yYGwS)}>
            {(() => {
              try {
                return !$state.imageDialog.open;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <div className={classNames(projectcss.all, sty.freeBox__p1Evm)}>
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.map),
                    height: "256px",
                    lat: generateStateValueProp($state, ["map", "lat"]),
                    lng: generateStateValueProp($state, ["map", "lng"]),
                    onChangeLat: async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, ["map", "lat"]).apply(
                        null,
                        eventArgs
                      );
                    },
                    onChangeLng: async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, ["map", "lng"]).apply(
                        null,
                        eventArgs
                      );
                    },
                    width: "100%",
                    zoom: 20
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "lat",
                        plasmicStateName: "map.lat"
                      },
                      {
                        name: "lng",
                        plasmicStateName: "map.lng"
                      }
                    ],
                    [],
                    undefined ?? {},
                    child$Props
                  );
                  initializePlasmicStates(
                    $state,
                    [
                      {
                        name: "map.lat",
                        initFunc: ({ $props, $state, $queries }) =>
                          (() => {
                            try {
                              return (() => {
                                const centers = Array.isArray(
                                  $state.centersApi?.data?.data
                                )
                                  ? $state.centersApi.data.data
                                  : [];
                                const lat =
                                  centers.find(
                                    c =>
                                      c.id !== 5532 && Number(c.type_id) === 1
                                  )?.lat ?? 35.70069003610754;
                                return lat;
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return 35.70069003610754;
                              }
                              throw e;
                            }
                          })()
                      },
                      {
                        name: "map.lng",
                        initFunc: ({ $props, $state, $queries }) =>
                          (() => {
                            try {
                              return (() => {
                                const centers = Array.isArray(
                                  $state.centersApi?.data?.data
                                )
                                  ? $state.centersApi.data.data
                                  : [];
                                const lat =
                                  centers.find(
                                    c =>
                                      c.id !== 5532 && Number(c.type_id) === 1
                                  )?.lat ?? 51.35918498039246;
                                return lat;
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return 51.35918498039246;
                              }
                              throw e;
                            }
                          })()
                      }
                    ],
                    []
                  );
                  return (
                    <Map
                      data-plasmic-name={"map"}
                      data-plasmic-override={overrides.map}
                      {...child$Props}
                    />
                  );
                })()}
              </div>
            ) : null}
          </div>
          <Button
            children2={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hz6N0
                )}
              >
                {
                  "\u0630\u062e\u06cc\u0631\u0647 \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a"
                }
              </div>
            }
            className={classNames("__wab_instance", sty.button___9E4Bm)}
            loading={(() => {
              try {
                return $state.isLoadingSave;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
            onClick={async event => {
              const $steps = {};

              $steps["updateIsLoadingSave"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["isLoadingSave"]
                      },
                      operation: 0,
                      value: true
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateIsLoadingSave"] != null &&
                typeof $steps["updateIsLoadingSave"] === "object" &&
                typeof $steps["updateIsLoadingSave"].then === "function"
              ) {
                $steps["updateIsLoadingSave"] = await $steps[
                  "updateIsLoadingSave"
                ];
              }

              $steps["saveChangesApi"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        "PUT",
                        (() => {
                          try {
                            return (() => {
                              const centerId = $state.centersApi.data.data.find(
                                item => item.type_id == 1
                              ).id;
                              return `https://apigw.paziresh24.com/v1/doctor/contact-details/${centerId}`;
                            })();
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })(),
                        undefined,
                        (() => {
                          try {
                            return (() => {
                              const newTells = $state.profileTells.newTells.map(
                                item => item.tell
                              );
                              return {
                                address: $state.address.value,
                                city: $state.citySelect.value,
                                lat: $state.map.lat,
                                lon: $state.map.lng,
                                province: $state.provinceSelect.value,
                                tells: [
                                  ...$state.profileTells.oldTells,
                                  ...newTells
                                ]
                              };
                            })();
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Fragment.apiRequest"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["saveChangesApi"] != null &&
                typeof $steps["saveChangesApi"] === "object" &&
                typeof $steps["saveChangesApi"].then === "function"
              ) {
                $steps["saveChangesApi"] = await $steps["saveChangesApi"];
              }

              $steps["updateIsLoadingSave2"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["isLoadingSave"]
                      },
                      operation: 0,
                      value: false
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateIsLoadingSave2"] != null &&
                typeof $steps["updateIsLoadingSave2"] === "object" &&
                typeof $steps["updateIsLoadingSave2"].then === "function"
              ) {
                $steps["updateIsLoadingSave2"] = await $steps[
                  "updateIsLoadingSave2"
                ];
              }

              $steps["successToast"] =
                $steps.saveChangesApi.status == 200
                  ? (() => {
                      const actionArgs = {
                        args: [
                          undefined,
                          "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0645\u0637\u0628 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u0628\u0647 \u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06cc \u0634\u062f."
                        ]
                      };
                      return $globalActions["Fragment.showToast"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
              if (
                $steps["successToast"] != null &&
                typeof $steps["successToast"] === "object" &&
                typeof $steps["successToast"].then === "function"
              ) {
                $steps["successToast"] = await $steps["successToast"];
              }

              $steps["errorToast"] =
                $steps.saveChangesApi.status !== 200
                  ? (() => {
                      const actionArgs = {
                        args: [
                          "error",
                          "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0645\u0637\u0628 \u0628\u0647 \u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06cc \u0646\u0634\u062f."
                        ]
                      };
                      return $globalActions["Fragment.showToast"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
              if (
                $steps["errorToast"] != null &&
                typeof $steps["errorToast"] === "object" &&
                typeof $steps["errorToast"].then === "function"
              ) {
                $steps["errorToast"] = await $steps["errorToast"];
              }

              $steps["sendEvent"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        (() => {
                          try {
                            return {
                              event_group: "edit-profile",
                              data: { pagePath: window.location.href },
                              event_type: "save-changes-address-phone"
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      ]
                    };
                    return $globalActions["Splunk.sendLog"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["sendEvent"] != null &&
                typeof $steps["sendEvent"] === "object" &&
                typeof $steps["sendEvent"].then === "function"
              ) {
                $steps["sendEvent"] = await $steps["sendEvent"];
              }

              $steps["sendEvent2"] =
                $state.profileTells.newTells
                  .concat($state.profileTells.oldTells)
                  .some(tellObj => tellObj.tell.match(/^09\d{9}$/)) === true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          (() => {
                            try {
                              return {
                                event_group: "EditProfile",
                                data: {
                                  MobileForOfficeTell:
                                    $state.profileTells.newTells
                                      .concat($state.oldTells)
                                      .some(tellObj =>
                                        tellObj.tell.match(/^09\d{9}$/)
                                      ),
                                  CenterId: $state.centersApi.data.data.find(
                                    center => center.type_id === 1
                                  ).id,
                                  CenterName: $state.centersApi.data.data.find(
                                    center => center.type_id === 1
                                  ).name,
                                  CenterTell: $state.profileTells
                                },
                                event_type: "MobileForOfficeTell"
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Splunk.sendLog"]?.apply(null, [
                        ...actionArgs.args
                      ]);
                    })()
                  : undefined;
              if (
                $steps["sendEvent2"] != null &&
                typeof $steps["sendEvent2"] === "object" &&
                typeof $steps["sendEvent2"].then === "function"
              ) {
                $steps["sendEvent2"] = await $steps["sendEvent2"];
              }
            }}
          />
        </div>
        {false ? (
          <SideEffect
            data-plasmic-name={"sideEffect"}
            data-plasmic-override={overrides.sideEffect}
            className={classNames("__wab_instance", sty.sideEffect)}
            deps={(() => {
              try {
                return $state.centersApi.data;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            onMount={async () => {
              const $steps = {};

              $steps["updateOldPhoneNumbers"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["oldPhoneNumbers"]
                      },
                      operation: 0,
                      value: $state.centersApi?.data?.data?.find(
                        item => item.type_id == 1
                      )?.tells
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateOldPhoneNumbers"] != null &&
                typeof $steps["updateOldPhoneNumbers"] === "object" &&
                typeof $steps["updateOldPhoneNumbers"].then === "function"
              ) {
                $steps["updateOldPhoneNumbers"] = await $steps[
                  "updateOldPhoneNumbers"
                ];
              }
            }}
          />
        ) : null}
      </ApiRequest>
      <Dialog
        data-plasmic-name={"imageDialog"}
        data-plasmic-override={overrides.imageDialog}
        body={
          <div className={classNames(projectcss.all, sty.freeBox__rykZm)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__sXkNt)}
              displayHeight={"100%"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"400px"}
              loading={"lazy"}
              src={(() => {
                try {
                  return $state.selectdImage.url;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
            />

            <Button
              children2={"\u062d\u0630\u0641 \u062a\u0635\u0648\u06cc\u0631"}
              className={classNames("__wab_instance", sty.button___03UTe)}
              color={"softRed"}
              onClick={async event => {
                const $steps = {};

                $steps["updateDeleteImageDialog2Open"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["deleteImageDialog", "open"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDeleteImageDialog2Open"] != null &&
                  typeof $steps["updateDeleteImageDialog2Open"] === "object" &&
                  typeof $steps["updateDeleteImageDialog2Open"].then ===
                    "function"
                ) {
                  $steps["updateDeleteImageDialog2Open"] = await $steps[
                    "updateDeleteImageDialog2Open"
                  ];
                }
              }}
              showStartIcon={true}
              startIcon={
                <Icon4Icon
                  className={classNames(projectcss.all, sty.svg__bXrfn)}
                  role={"img"}
                />
              }
            />
          </div>
        }
        className={classNames("__wab_instance", sty.imageDialog)}
        noTrigger={true}
        onOpenChange={async (...eventArgs: any) => {
          generateStateOnChangeProp($state, ["imageDialog", "open"]).apply(
            null,
            eventArgs
          );

          if (
            eventArgs.length > 1 &&
            eventArgs[1] &&
            eventArgs[1]._plasmic_state_init_
          ) {
            return;
          }
        }}
        open={generateStateValueProp($state, ["imageDialog", "open"])}
        title={""}
        trigger={null}
      />

      <Dialog
        data-plasmic-name={"deleteImageDialog"}
        data-plasmic-override={overrides.deleteImageDialog}
        body={
          <div className={classNames(projectcss.all, sty.freeBox__qdRDn)}>
            <Button
              children2={"\u0628\u0644\u0647 \u0648 \u062d\u0630\u0641"}
              className={classNames("__wab_instance", sty.button__voqZ5)}
              color={"red"}
              onClick={async event => {
                const $steps = {};

                $steps["deleteImageApi"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          "DELETE",
                          (() => {
                            try {
                              return `https://api.paziresh24.com/V1/doctor/center/gallery/${$state.selectdImage.id}`;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })(),
                          undefined,
                          (() => {
                            try {
                              return {
                                ...$ctx.Fragment.apiConfig,
                                ...$ctx.Fragment.previewApiConfig
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })(),
                          (() => {
                            try {
                              return {
                                ...$ctx.Fragment.apiConfig,
                                ...$ctx.Fragment.previewApiConfig
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Fragment.apiRequest"]?.apply(
                        null,
                        [...actionArgs.args]
                      );
                    })()
                  : undefined;
                if (
                  $steps["deleteImageApi"] != null &&
                  typeof $steps["deleteImageApi"] === "object" &&
                  typeof $steps["deleteImageApi"].then === "function"
                ) {
                  $steps["deleteImageApi"] = await $steps["deleteImageApi"];
                }

                $steps["updateDeleteImageDialogOpen"] =
                  $steps.deleteImageApi.status == 204
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["deleteImageDialog", "open"]
                          },
                          operation: 4
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          const oldValue = $stateGet(objRoot, variablePath);
                          $stateSet(objRoot, variablePath, !oldValue);
                          return !oldValue;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["updateDeleteImageDialogOpen"] != null &&
                  typeof $steps["updateDeleteImageDialogOpen"] === "object" &&
                  typeof $steps["updateDeleteImageDialogOpen"].then ===
                    "function"
                ) {
                  $steps["updateDeleteImageDialogOpen"] = await $steps[
                    "updateDeleteImageDialogOpen"
                  ];
                }

                $steps["updateImageDialogOpen"] =
                  $steps.deleteImageApi.status == 204
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["imageDialog", "open"]
                          },
                          operation: 4
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          const oldValue = $stateGet(objRoot, variablePath);
                          $stateSet(objRoot, variablePath, !oldValue);
                          return !oldValue;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["updateImageDialogOpen"] != null &&
                  typeof $steps["updateImageDialogOpen"] === "object" &&
                  typeof $steps["updateImageDialogOpen"].then === "function"
                ) {
                  $steps["updateImageDialogOpen"] = await $steps[
                    "updateImageDialogOpen"
                  ];
                }

                $steps["runActionOnGalleryApi"] = true
                  ? (() => {
                      const actionArgs = {
                        tplRef: "galleryApi",
                        action: "refresh"
                      };
                      return (({ tplRef, action, args }) => {
                        return $refs?.[tplRef]?.[action]?.(...(args ?? []));
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["runActionOnGalleryApi"] != null &&
                  typeof $steps["runActionOnGalleryApi"] === "object" &&
                  typeof $steps["runActionOnGalleryApi"].then === "function"
                ) {
                  $steps["runActionOnGalleryApi"] = await $steps[
                    "runActionOnGalleryApi"
                  ];
                }
              }}
            />

            <Button
              children2={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___23Khc
                  )}
                >
                  {"\u0627\u0646\u0635\u0631\u0627\u0641"}
                </div>
              }
              className={classNames("__wab_instance", sty.button___5FBum)}
              color={"softSand"}
              onClick={async event => {
                const $steps = {};

                $steps["updateDeleteImageDialog2Open"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["deleteImageDialog", "open"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDeleteImageDialog2Open"] != null &&
                  typeof $steps["updateDeleteImageDialog2Open"] === "object" &&
                  typeof $steps["updateDeleteImageDialog2Open"].then ===
                    "function"
                ) {
                  $steps["updateDeleteImageDialog2Open"] = await $steps[
                    "updateDeleteImageDialog2Open"
                  ];
                }
              }}
            />
          </div>
        }
        className={classNames("__wab_instance", sty.deleteImageDialog)}
        noTrigger={true}
        onOpenChange={async (...eventArgs: any) => {
          generateStateOnChangeProp($state, [
            "deleteImageDialog",
            "open"
          ]).apply(null, eventArgs);

          if (
            eventArgs.length > 1 &&
            eventArgs[1] &&
            eventArgs[1]._plasmic_state_init_
          ) {
            return;
          }
        }}
        open={generateStateValueProp($state, ["deleteImageDialog", "open"])}
        title={
          "\u0622\u06cc\u0627 \u0627\u0632 \u062d\u0630\u0641 \u062a\u0635\u0648\u06cc\u0631 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f\u061f"
        }
        trigger={null}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "centersApi",
    "provinceSelect",
    "citySelect",
    "address",
    "profileTells",
    "input3",
    "galleryApi",
    "fragmentFileInput",
    "checkbox",
    "checkbox2",
    "checkbox3",
    "checkbox4",
    "map",
    "sideEffect",
    "imageDialog",
    "deleteImageDialog"
  ],
  centersApi: [
    "centersApi",
    "provinceSelect",
    "citySelect",
    "address",
    "profileTells",
    "input3",
    "galleryApi",
    "fragmentFileInput",
    "checkbox",
    "checkbox2",
    "checkbox3",
    "checkbox4",
    "map",
    "sideEffect"
  ],
  provinceSelect: ["provinceSelect"],
  citySelect: ["citySelect"],
  address: ["address"],
  profileTells: ["profileTells"],
  input3: ["input3"],
  galleryApi: ["galleryApi"],
  fragmentFileInput: ["fragmentFileInput"],
  checkbox: ["checkbox"],
  checkbox2: ["checkbox2"],
  checkbox3: ["checkbox3"],
  checkbox4: ["checkbox4"],
  map: ["map"],
  sideEffect: ["sideEffect"],
  imageDialog: ["imageDialog"],
  deleteImageDialog: ["deleteImageDialog"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  centersApi: typeof ApiRequest;
  provinceSelect: typeof Select;
  citySelect: typeof Select;
  address: typeof Input;
  profileTells: typeof ProfileTells;
  input3: typeof Input;
  galleryApi: typeof ApiRequest;
  fragmentFileInput: typeof FileInput;
  checkbox: typeof Checkbox;
  checkbox2: typeof Checkbox;
  checkbox3: typeof Checkbox;
  checkbox4: typeof Checkbox;
  map: typeof Map;
  sideEffect: typeof SideEffect;
  imageDialog: typeof Dialog;
  deleteImageDialog: typeof Dialog;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProfileAddress__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProfileAddress__VariantsArgs;
    args?: PlasmicProfileAddress__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProfileAddress__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicProfileAddress__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProfileAddress__ArgProps,
          internalVariantPropNames: PlasmicProfileAddress__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProfileAddress__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProfileAddress";
  } else {
    func.displayName = `PlasmicProfileAddress.${nodeName}`;
  }
  return func;
}

export const PlasmicProfileAddress = Object.assign(
  // Top-level PlasmicProfileAddress renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    centersApi: makeNodeComponent("centersApi"),
    provinceSelect: makeNodeComponent("provinceSelect"),
    citySelect: makeNodeComponent("citySelect"),
    address: makeNodeComponent("address"),
    profileTells: makeNodeComponent("profileTells"),
    input3: makeNodeComponent("input3"),
    galleryApi: makeNodeComponent("galleryApi"),
    fragmentFileInput: makeNodeComponent("fragmentFileInput"),
    checkbox: makeNodeComponent("checkbox"),
    checkbox2: makeNodeComponent("checkbox2"),
    checkbox3: makeNodeComponent("checkbox3"),
    checkbox4: makeNodeComponent("checkbox4"),
    map: makeNodeComponent("map"),
    sideEffect: makeNodeComponent("sideEffect"),
    imageDialog: makeNodeComponent("imageDialog"),
    deleteImageDialog: makeNodeComponent("deleteImageDialog"),

    // Metadata about props expected for PlasmicProfileAddress
    internalVariantProps: PlasmicProfileAddress__VariantProps,
    internalArgProps: PlasmicProfileAddress__ArgProps
  }
);

export default PlasmicProfileAddress;
/* prettier-ignore-end */
