// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9g1e5LLLDS4TGJiaFCSEyH
// Component: OnraYGfaX_Kh

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Card from "../../Card"; // plasmic-import: QMzVdopOLfBM/component
import UncertainBookStatusList from "../../UncertainBookStatusList"; // plasmic-import: pk_8VfwTEmq0/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../fragment_design_system/plasmic.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 9g1e5LLLDS4TGJiaFCSEyH/projectcss
import sty from "./PlasmicUncertainBookStatusListPage.module.css"; // plasmic-import: OnraYGfaX_Kh/css

createPlasmicElementProxy;

export type PlasmicUncertainBookStatusListPage__VariantMembers = {};
export type PlasmicUncertainBookStatusListPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicUncertainBookStatusListPage__VariantsArgs;
export const PlasmicUncertainBookStatusListPage__VariantProps =
  new Array<VariantPropType>();

export type PlasmicUncertainBookStatusListPage__ArgsType = {};
type ArgPropType = keyof PlasmicUncertainBookStatusListPage__ArgsType;
export const PlasmicUncertainBookStatusListPage__ArgProps =
  new Array<ArgPropType>();

export type PlasmicUncertainBookStatusListPage__OverridesType = {
  root?: Flex__<"div">;
  card?: Flex__<typeof Card>;
  uncertainBookStatusList?: Flex__<typeof UncertainBookStatusList>;
};

export interface DefaultUncertainBookStatusListPageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicUncertainBookStatusListPage__RenderFunc(props: {
  variants: PlasmicUncertainBookStatusListPage__VariantsArgs;
  args: PlasmicUncertainBookStatusListPage__ArgsType;
  overrides: PlasmicUncertainBookStatusListPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_fragment_design_system_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__yw6Pn)}>
            <div className={classNames(projectcss.all, sty.freeBox__q1Xo)}>
              <Card
                data-plasmic-name={"card"}
                data-plasmic-override={overrides.card}
                className={classNames("__wab_instance", sty.card)}
                title={null}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1DHaR
                  )}
                >
                  {"\u067e\u0632\u0634\u06a9 \u06af\u0631\u0627\u0645\u06cc"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lvAk
                  )}
                >
                  {
                    '\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0648\u0636\u0639\u06cc\u062a \u0646\u0648\u0628\u062a\u200c\u0647\u0627\u06cc \u0632\u06cc\u0631 \u0631\u0627 \u0628\u0647 \u067e\u0630\u06cc\u0631\u0634 \u06f2\u06f4 \u0627\u0639\u0644\u0627\u0645 \u0646\u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f.\n\u0647\u0632\u06cc\u0646\u0647\u200c\u0647\u0627\u06cc \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 \u0627\u06cc\u0646 \u0646\u0648\u0628\u062a\u200c\u0647\u0627 \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u0645\u062d\u0627\u0633\u0628\u0647 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a \u0648 \u062a\u0627 \u0632\u0645\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u0648 \u062a\u0633\u0648\u06cc\u0647 \u062d\u0633\u0627\u0628\u060c \u0645\u0628\u0644\u063a \u0645\u0631\u0628\u0648\u0637\u0647 \u062f\u0631 \u062d\u0633\u0627\u0628 \u0634\u0631\u06a9\u062a \u0628\u0647 \u0635\u0648\u0631\u062a \u0642\u0631\u0636\u200c\u0627\u0644\u062d\u0633\u0646\u0647 \u0646\u06af\u0647\u062f\u0627\u0631\u06cc \u0645\u06cc\u200c\u0634\u0648\u062f.\n\n  - \u062f\u0631 \u0635\u0648\u0631\u062a \u0627\u0646\u062c\u0627\u0645 \u0648\u06cc\u0632\u06cc\u062a \u0628\u06cc\u0645\u0627\u0631\u060c \u06af\u0632\u06cc\u0646\u0647 "\u0648\u06cc\u0632\u06cc\u062a \u06a9\u0631\u062f\u0647 \u0627\u0645" \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f.\n  - \u062f\u0631 \u063a\u06cc\u0631 \u0627\u06cc\u0646\u0635\u0648\u0631\u062a\u060c \u0646\u0648\u0628\u062a \u0628\u06cc\u0645\u0627\u0631 \u0631\u0627 \u0628\u0627 \u06a9\u0644\u06cc\u06a9 \u0628\u0631 \u0631\u0648\u06cc \u0646\u0627\u0645 \u0628\u06cc\u0645\u0627\u0631 \u062d\u0630\u0641 \u0646\u0645\u0627\u06cc\u06cc\u062f.'
                  }
                </div>
              </Card>
            </div>
            <UncertainBookStatusList
              data-plasmic-name={"uncertainBookStatusList"}
              data-plasmic-override={overrides.uncertainBookStatusList}
              className={classNames(
                "__wab_instance",
                sty.uncertainBookStatusList
              )}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "card", "uncertainBookStatusList"],
  card: ["card"],
  uncertainBookStatusList: ["uncertainBookStatusList"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  card: typeof Card;
  uncertainBookStatusList: typeof UncertainBookStatusList;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicUncertainBookStatusListPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicUncertainBookStatusListPage__VariantsArgs;
    args?: PlasmicUncertainBookStatusListPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit< // Specify variants directly as props
    PlasmicUncertainBookStatusListPage__VariantsArgs,
    ReservedPropsType
  > &
    /* Specify args directly as props*/ Omit<
      PlasmicUncertainBookStatusListPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicUncertainBookStatusListPage__ArgProps,
          internalVariantPropNames:
            PlasmicUncertainBookStatusListPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicUncertainBookStatusListPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicUncertainBookStatusListPage";
  } else {
    func.displayName = `PlasmicUncertainBookStatusListPage.${nodeName}`;
  }
  return func;
}

export const PlasmicUncertainBookStatusListPage = Object.assign(
  // Top-level PlasmicUncertainBookStatusListPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    card: makeNodeComponent("card"),
    uncertainBookStatusList: makeNodeComponent("uncertainBookStatusList"),

    // Metadata about props expected for PlasmicUncertainBookStatusListPage
    internalVariantProps: PlasmicUncertainBookStatusListPage__VariantProps,
    internalArgProps: PlasmicUncertainBookStatusListPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicUncertainBookStatusListPage;
/* prettier-ignore-end */
